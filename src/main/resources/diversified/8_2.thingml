datatype Byte<1>
	@type_checker "Byte"
	@java_type "byte"
datatype Integer<2>
	@type_checker "Integer"
	@java_type "short"
thing fragment Msgs {
	message m2(a : Byte@upsize "not", r4 : Integer, b : Byte@upsize "not", r24 : Byte, r220 : Byte, r269 : Byte, r21 : Byte, r17 : Byte, r122 : Byte, r19 : Byte, r12 : Integer, r318 : Byte, r7 : Byte, r1 : Integer, r11 : Byte, r171 : Byte, c : Integer, r73 : Byte, r367 : Byte)
	@code "0x98"
	message m1(r15 : Integer, r14 : Byte, r319 : Byte, r123 : Byte, r22 : Byte, b : Byte@upsize "not", r25 : Byte, a : Byte@upsize "not", c : Integer, r9 : Byte, r172 : Byte, d : Byte, r20 : Byte, e : Integer, r368 : Byte, r221 : Byte, r2 : Integer, r3 : Integer, r74 : Byte, r8 : Integer, r270 : Byte)
	@code "0x99"
	message m3(r271 : Byte, r16 : Integer, r6 : Integer, r10 : Integer, r0 : Integer, r173 : Byte, r23 : Byte, r5 : Byte, r369 : Byte, r26 : Byte, a : Integer, r75 : Byte, r18 : Byte, r13 : Byte, r124 : Byte, r320 : Byte, r222 : Byte)
	@code "0x9A"
	message m2r11r12a(r321 : Byte, r370 : Byte, r125 : Byte, r223 : Byte, r12 : Integer, r11 : Byte, a : Byte @upsize "not", r27 : Byte, r272 : Byte, r76 : Byte, r174 : Byte)
	@code "0x9B"
	message m2r1r17r21br19cr4r7(r7 : Byte, r77 : Byte, r1 : Integer, b : Byte @upsize "not", r17 : Byte, r126 : Byte, c : Integer, r224 : Byte, r19 : Byte, r28 : Byte, r21 : Byte, r371 : Byte, r175 : Byte, r322 : Byte, r273 : Byte, r4 : Integer)
	@code "0x9C"
	message m3r5ar18r0r10r13r16r6(r5 : Byte, r78 : Byte, r6 : Integer, r29 : Byte, r18 : Byte, r0 : Integer, r225 : Byte, r323 : Byte, a : Integer, r13 : Byte, r127 : Byte, r16 : Integer, r372 : Byte, r10 : Integer, r176 : Byte, r274 : Byte)
	@code "0x9D"
	message m3r23(r373 : Byte, r226 : Byte, r23 : Byte, r79 : Byte, r30 : Byte, r177 : Byte, r324 : Byte, r128 : Byte, r275 : Byte)
	@code "0x9E"
	message m1ar22r20(r178 : Byte, a : Byte @upsize "not", r374 : Byte, r20 : Byte, r325 : Byte, r227 : Byte, r80 : Byte, r276 : Byte, r129 : Byte, r22 : Byte, r31 : Byte)
	@code "0x9F"
	message m1dcr14r15er9r3br2r8(r375 : Byte, c : Integer, r9 : Byte, r15 : Integer, r14 : Byte, r179 : Byte, r277 : Byte, r8 : Integer, r3 : Integer, e : Integer, r228 : Byte, r326 : Byte, d : Byte, r32 : Byte, r2 : Integer, b : Byte @upsize "not", r130 : Byte, r81 : Byte)
	@code "0xA0"
	message m2r11r12ar11r12(r82 : Byte, r33 : Byte, r131 : Byte, r327 : Byte, r12 : Integer, r229 : Byte, r376 : Byte, r278 : Byte, r11 : Byte, r180 : Byte)
	@code "0xA1"
	message m2r11r12aa(r279 : Byte, r34 : Byte, r83 : Byte, r181 : Byte, r328 : Byte, r377 : Byte, r230 : Byte, a : Byte @upsize "not", r132 : Byte)
	@code "0xA2"
	message m2r1r17r21br19cr4r7r1r17r21(r35 : Byte, r84 : Byte, r182 : Byte, r1 : Integer, r378 : Byte, r17 : Byte, r280 : Byte, r21 : Byte, r231 : Byte, r133 : Byte, r329 : Byte)
	@code "0xA3"
	message m2r1r17r21br19cr4r7br19cr4r7(r7 : Byte, c : Integer, r281 : Byte, r134 : Byte, r379 : Byte, r36 : Byte, r85 : Byte, r183 : Byte, r232 : Byte, b : Byte @upsize "not", r4 : Integer, r19 : Byte, r330 : Byte)
	@code "0xA4"
	message m1dcr14r15er9r3br2r8dcr14r15er9r3b(r380 : Byte, r37 : Byte, r135 : Byte, c : Integer, r184 : Byte, b : Byte @upsize "not", r9 : Byte, r331 : Byte, r14 : Byte, r15 : Integer, r233 : Byte, r86 : Byte, e : Integer, d : Byte, r3 : Integer, r282 : Byte)
	@code "0xA5"
	message m1dcr14r15er9r3br2r8r2r8(r283 : Byte, r185 : Byte, r332 : Byte, r234 : Byte, r136 : Byte, r2 : Integer, r38 : Byte, r381 : Byte, r8 : Integer, r87 : Byte)
	@code "0xA6"
	message m2r1r17r21br19cr4r7r1r17r21r1r17(r382 : Byte, r39 : Byte, r284 : Byte, r1 : Integer, r17 : Byte, r137 : Byte, r88 : Byte, r333 : Byte, r235 : Byte, r186 : Byte)
	@code "0xA7"
	message m2r1r17r21br19cr4r7r1r17r21r21(r138 : Byte, r334 : Byte, r21 : Byte, r383 : Byte, r285 : Byte, r89 : Byte, r236 : Byte, r187 : Byte, r40 : Byte)
	@code "0xA8"
	message m2r1r17r21br19cr4r7br19cr4r7br19c(r237 : Byte, c : Integer, r335 : Byte, r19 : Byte, r90 : Byte, b : Byte @upsize "not", r41 : Byte, r384 : Byte, r188 : Byte, r139 : Byte, r286 : Byte)
	@code "0xA9"
	message m2r1r17r21br19cr4r7br19cr4r7r4r7(r4 : Integer, r336 : Byte, r287 : Byte, r238 : Byte, r7 : Byte, r91 : Byte, r140 : Byte, r385 : Byte, r42 : Byte, r189 : Byte)
	@code "0xAA"
	message m3r5ar18r0r10r13r16r6r5ar18r0r10r13(r43 : Byte, r386 : Byte, r239 : Byte, r10 : Integer, r92 : Byte, r0 : Integer, r5 : Byte, r141 : Byte, r18 : Byte, r337 : Byte, r288 : Byte, a : Integer, r190 : Byte, r13 : Byte)
	@code "0xAB"
	message m3r5ar18r0r10r13r16r6r16r6(r44 : Byte, r16 : Integer, r240 : Byte, r191 : Byte, r6 : Integer, r142 : Byte, r93 : Byte, r289 : Byte, r338 : Byte, r387 : Byte)
	@code "0xAC"
	message m1ar22r20ar22(r290 : Byte, r22 : Byte, r241 : Byte, r143 : Byte, r192 : Byte, r45 : Byte, r94 : Byte, r388 : Byte, a : Byte @upsize "not", r339 : Byte)
	@code "0xAD"
	message m1ar22r20r20(r193 : Byte, r46 : Byte, r291 : Byte, r95 : Byte, r340 : Byte, r20 : Byte, r389 : Byte, r144 : Byte, r242 : Byte)
	@code "0xAE"
	message m2r1r17r21br19cr4r7br19cr4r7br19cb(r194 : Byte, b : Byte @upsize "not", r292 : Byte, r145 : Byte, r96 : Byte, r390 : Byte, r341 : Byte, r243 : Byte, r47 : Byte)
	@code "0xAF"
	message m2r1r17r21br19cr4r7br19cr4r7br19cr19c(r391 : Byte, r97 : Byte, r244 : Byte, r19 : Byte, r48 : Byte, r146 : Byte, r342 : Byte, r195 : Byte, r293 : Byte, c : Integer)
	@code "0xB0"
	message m2r1r17r21br19cr4r7br19cr4r7r4r7r4(r98 : Byte, r343 : Byte, r392 : Byte, r196 : Byte, r4 : Integer, r245 : Byte, r294 : Byte, r49 : Byte, r147 : Byte)
	@code "0xB1"
	message m2r1r17r21br19cr4r7br19cr4r7r4r7r7(r50 : Byte, r246 : Byte, r99 : Byte, r7 : Byte, r197 : Byte, r295 : Byte, r393 : Byte, r148 : Byte, r344 : Byte)
	@code "0xB2"
	message m3r5ar18r0r10r13r16r6r16r6r16(r16 : Integer, r100 : Byte, r394 : Byte, r51 : Byte, r296 : Byte, r198 : Byte, r247 : Byte, r345 : Byte, r149 : Byte)
	@code "0xB3"
	message m3r5ar18r0r10r13r16r6r16r6r6(r101 : Byte, r6 : Integer, r395 : Byte, r150 : Byte, r297 : Byte, r248 : Byte, r346 : Byte, r52 : Byte, r199 : Byte)
	@code "0xB4"
	message m2r11r12ar11r12r11(r151 : Byte, r53 : Byte, r347 : Byte, r11 : Byte, r396 : Byte, r249 : Byte, r200 : Byte, r102 : Byte, r298 : Byte)
	@code "0xB5"
	message m2r11r12ar11r12r12(r12 : Integer, r103 : Byte, r250 : Byte, r397 : Byte, r54 : Byte, r348 : Byte, r299 : Byte, r152 : Byte, r201 : Byte)
	@code "0xB6"
	message m1ar22r20ar22a(r104 : Byte, r300 : Byte, r202 : Byte, r398 : Byte, r55 : Byte, r251 : Byte, r349 : Byte, a : Byte @upsize "not", r153 : Byte)
	@code "0xB7"
	message m1ar22r20ar22r22(r252 : Byte, r399 : Byte, r105 : Byte, r301 : Byte, r154 : Byte, r56 : Byte, r22 : Byte, r350 : Byte, r203 : Byte)
	@code "0xB8"
	message m2r1r17r21br19cr4r7br19cr4r7br19cr19cr19(r400 : Byte, r106 : Byte, r57 : Byte, r19 : Byte, r204 : Byte, r302 : Byte, r351 : Byte, r155 : Byte, r253 : Byte)
	@code "0xB9"
	message m2r1r17r21br19cr4r7br19cr4r7br19cr19cc(r401 : Byte, r254 : Byte, r107 : Byte, r352 : Byte, c : Integer, r58 : Byte, r303 : Byte, r205 : Byte, r156 : Byte)
	@code "0xBA"
	message m3r5ar18r0r10r13r16r6r5ar18r0r10r13r5ar18r0(r353 : Byte, r18 : Byte, a : Integer, r5 : Byte, r108 : Byte, r157 : Byte, r304 : Byte, r0 : Integer, r206 : Byte, r402 : Byte, r255 : Byte, r59 : Byte)
	@code "0xBB"
	message m3r5ar18r0r10r13r16r6r5ar18r0r10r13r10r13(r158 : Byte, r10 : Integer, r256 : Byte, r109 : Byte, r60 : Byte, r354 : Byte, r403 : Byte, r207 : Byte, r305 : Byte, r13 : Byte)
	@code "0xBC"
	message m1dcr14r15er9r3br2r8dcr14r15er9r3bd(r208 : Byte, r257 : Byte, r404 : Byte, r61 : Byte, r159 : Byte, r355 : Byte, r110 : Byte, r306 : Byte, d : Byte)
	@code "0xBD"
	message m1dcr14r15er9r3br2r8dcr14r15er9r3bcr14r15er9r3b(r258 : Byte, r160 : Byte, r356 : Byte, c : Integer, r15 : Integer, e : Integer, r62 : Byte, r9 : Byte, r405 : Byte, r209 : Byte, r111 : Byte, r3 : Integer, r14 : Byte, b : Byte @upsize "not", r307 : Byte)
	@code "0xBE"
	message m3r5ar18r0r10r13r16r6r5ar18r0r10r13r10r13r10(r161 : Byte, r406 : Byte, r210 : Byte, r112 : Byte, r357 : Byte, r10 : Integer, r259 : Byte, r308 : Byte, r63 : Byte)
	@code "0xBF"
	message m3r5ar18r0r10r13r16r6r5ar18r0r10r13r10r13r13(r162 : Byte, r211 : Byte, r309 : Byte, r113 : Byte, r13 : Byte, r358 : Byte, r260 : Byte, r64 : Byte, r407 : Byte)
	@code "0xC0"
	message m2r1r17r21br19cr4r7r1r17r21r1r17r1(r310 : Byte, r212 : Byte, r1 : Integer, r408 : Byte, r114 : Byte, r261 : Byte, r65 : Byte, r359 : Byte, r163 : Byte)
	@code "0xC1"
	message m2r1r17r21br19cr4r7r1r17r21r1r17r17(r164 : Byte, r115 : Byte, r17 : Byte, r311 : Byte, r409 : Byte, r66 : Byte, r262 : Byte, r360 : Byte, r213 : Byte)
	@code "0xC2"
	message m1dcr14r15er9r3br2r8dcr14r15er9r3bcr14r15er9r3bcr14(r116 : Byte, r14 : Byte, r165 : Byte, r214 : Byte, r361 : Byte, r263 : Byte, c : Integer, r312 : Byte, r410 : Byte, r67 : Byte)
	@code "0xC3"
	message m1dcr14r15er9r3br2r8dcr14r15er9r3bcr14r15er9r3br15er9r3b(r15 : Integer, r68 : Byte, r313 : Byte, r9 : Byte, e : Integer, r3 : Integer, r117 : Byte, b : Byte @upsize "not", r264 : Byte, r166 : Byte, r411 : Byte, r215 : Byte, r362 : Byte)
	@code "0xC4"
	message m3r5ar18r0r10r13r16r6r5ar18r0r10r13r5ar18r0r5a(r314 : Byte, r363 : Byte, a : Integer, r5 : Byte, r167 : Byte, r118 : Byte, r265 : Byte, r216 : Byte, r412 : Byte, r69 : Byte)
	@code "0xC5"
	message m3r5ar18r0r10r13r16r6r5ar18r0r10r13r5ar18r0r18r0(r18 : Byte, r0 : Integer, r217 : Byte, r70 : Byte, r119 : Byte, r413 : Byte, r266 : Byte, r315 : Byte, r364 : Byte, r168 : Byte)
	@code "0xC6"
	message m1dcr14r15er9r3br2r8dcr14r15er9r3bcr14r15er9r3br15er9r3br15(r71 : Byte, r169 : Byte, r316 : Byte, r120 : Byte, r414 : Byte, r267 : Byte, r218 : Byte, r15 : Integer, r365 : Byte)
	@code "0xC7"
	message m1dcr14r15er9r3br2r8dcr14r15er9r3bcr14r15er9r3br15er9r3ber9r3b(r3 : Integer, r317 : Byte, r9 : Byte, r121 : Byte, r219 : Byte, r268 : Byte, r72 : Byte, b : Byte @upsize "not", e : Integer, r415 : Byte, r170 : Byte, r366 : Byte)
	@code "0xC8"
	function rnd() : Byte do
		return `Math.floor(Math.random() * Math.floor(256))`
	end
}
thing App includes Msgs {
	provided port app {
		sends m3r23
	sends m3r5ar18r0r10r13r16r6r16r6r16 sends m3r5ar18r0r10r13r16r6r16r6r6 sends m3r5ar18r0r10r13r16r6r5ar18r0r10r13r10r13r10 sends m3r5ar18r0r10r13r16r6r5ar18r0r10r13r10r13r13 sends m3r5ar18r0r10r13r16r6r5ar18r0r10r13r5ar18r0r5a sends m3r5ar18r0r10r13r16r6r5ar18r0r10r13r5ar18r0r18r0 receives m2r11r12aa receives m1dcr14r15er9r3br2r8r2r8
		receives m2r1r17r21br19cr4r7r1r17r21r21 receives m1ar22r20r20 receives m2r1r17r21br19cr4r7br19cr4r7br19cb receives m2r1r17r21br19cr4r7br19cr4r7r4r7r4 receives m2r1r17r21br19cr4r7br19cr4r7r4r7r7 receives m2r11r12ar11r12r11 receives m2r11r12ar11r12r12 receives m1ar22r20ar22a receives m1ar22r20ar22r22 receives m2r1r17r21br19cr4r7br19cr4r7br19cr19cr19 receives m2r1r17r21br19cr4r7br19cr4r7br19cr19cc receives m1dcr14r15er9r3br2r8dcr14r15er9r3bd receives m2r1r17r21br19cr4r7r1r17r21r1r17r1 receives m2r1r17r21br19cr4r7r1r17r21r1r17r17 receives m1dcr14r15er9r3br2r8dcr14r15er9r3bcr14r15er9r3bcr14 receives m1dcr14r15er9r3br2r8dcr14r15er9r3bcr14r15er9r3br15er9r3br15 receives m1dcr14r15er9r3br2r8dcr14r15er9r3bcr14r15er9r3br15er9r3ber9r3b
	}
	internal port diversified {
		sends m2 sends m1 sends m2r11r12aa sends m2r11r12a sends m2r1r17r21br19cr4r7 sends m1dcr14r15er9r3br2r8r2r8 sends m1dcr14r15er9r3br2r8 sends m2r1r17r21br19cr4r7r1r17r21r21 sends m2r1r17r21br19cr4r7r1r17r21 sends m2r1r17r21br19cr4r7br19cr4r7 sends m1ar22r20r20 sends m1ar22r20 sends m2r1r17r21br19cr4r7br19cr4r7br19cb sends m2r1r17r21br19cr4r7br19cr4r7br19c sends m2r1r17r21br19cr4r7br19cr4r7r4r7r4 sends m2r1r17r21br19cr4r7br19cr4r7r4r7r7 sends m2r1r17r21br19cr4r7br19cr4r7r4r7 sends m2r11r12ar11r12r11 sends m2r11r12ar11r12r12 sends m2r11r12ar11r12 sends m1ar22r20ar22a sends m1ar22r20ar22r22 sends m1ar22r20ar22 sends m2r1r17r21br19cr4r7br19cr4r7br19cr19cr19 sends m2r1r17r21br19cr4r7br19cr4r7br19cr19cc sends m2r1r17r21br19cr4r7br19cr4r7br19cr19c sends m1dcr14r15er9r3br2r8dcr14r15er9r3bd sends m1dcr14r15er9r3br2r8dcr14r15er9r3b sends m2r1r17r21br19cr4r7r1r17r21r1r17r1 sends m2r1r17r21br19cr4r7r1r17r21r1r17r17 sends m2r1r17r21br19cr4r7r1r17r21r1r17 sends m1dcr14r15er9r3br2r8dcr14r15er9r3bcr14r15er9r3bcr14 sends m1dcr14r15er9r3br2r8dcr14r15er9r3bcr14r15er9r3b sends m1dcr14r15er9r3br2r8dcr14r15er9r3bcr14r15er9r3br15er9r3br15 sends m1dcr14r15er9r3br2r8dcr14r15er9r3bcr14r15er9r3br15er9r3ber9r3b sends m1dcr14r15er9r3br2r8dcr14r15er9r3bcr14r15er9r3br15er9r3b receives m2 receives m1 receives m2r11r12aa receives m2r11r12a receives m2r1r17r21br19cr4r7 receives m1dcr14r15er9r3br2r8r2r8 receives m1dcr14r15er9r3br2r8 receives m2r1r17r21br19cr4r7r1r17r21r21 receives m2r1r17r21br19cr4r7r1r17r21 receives m2r1r17r21br19cr4r7br19cr4r7 receives m1ar22r20r20 receives m1ar22r20 receives m2r1r17r21br19cr4r7br19cr4r7br19cb receives m2r1r17r21br19cr4r7br19cr4r7br19c receives m2r1r17r21br19cr4r7br19cr4r7r4r7r4 receives m2r1r17r21br19cr4r7br19cr4r7r4r7r7 receives m2r1r17r21br19cr4r7br19cr4r7r4r7 receives m2r11r12ar11r12r11 receives m2r11r12ar11r12r12 receives m2r11r12ar11r12 receives m1ar22r20ar22a receives m1ar22r20ar22r22 receives m1ar22r20ar22 receives m2r1r17r21br19cr4r7br19cr4r7br19cr19cr19 receives m2r1r17r21br19cr4r7br19cr4r7br19cr19cc receives m2r1r17r21br19cr4r7br19cr4r7br19cr19c receives m1dcr14r15er9r3br2r8dcr14r15er9r3bd receives m1dcr14r15er9r3br2r8dcr14r15er9r3b receives m2r1r17r21br19cr4r7r1r17r21r1r17r1 receives m2r1r17r21br19cr4r7r1r17r21r1r17r17 receives m2r1r17r21br19cr4r7r1r17r21r1r17 receives m1dcr14r15er9r3br2r8dcr14r15er9r3bcr14r15er9r3bcr14 receives m1dcr14r15er9r3br2r8dcr14r15er9r3bcr14r15er9r3b receives m1dcr14r15er9r3br2r8dcr14r15er9r3bcr14r15er9r3br15er9r3br15 receives m1dcr14r15er9r3br2r8dcr14r15er9r3bcr14r15er9r3br15er9r3ber9r3b receives m1dcr14r15er9r3br2r8dcr14r15er9r3bcr14r15er9r3br15er9r3b
	}
	property id : Byte
	statechart init WaitForM1 {
		state WaitForM1 {
			transition -> WaitForM2
			event e : diversified?m1
			action do
				id = e.a
				println "#APP: Ooh, I needed that app?m1(" , e.a , ", " , e.b , ", " , e.c , ", " , e.d , ", " , e.e , ")!"
			end
		}
		state WaitForM2 {
			transition -> SendAck
			event e : diversified?m2
			action println "#APP: Ooh, I needed that app?m2(" , e.a , ", " , e.b , ", " , e.c , ")!"
		}
		state SendAck {
			on entry do
				println "#APP: Come get some app!m3(" , id , ")!"
				do
					do
						do
							do
								do
									println "-59" , ", " , rnd(), ", " , rnd(), ", " , id , ", " , rnd(), ", " , rnd(), ", " , rnd(), ", " , rnd(), ", " , rnd(), ", " , rnd(), ", " , rnd(), ", "
									app!m3r5ar18r0r10r13r16r6r5ar18r0r10r13r5ar18r0r5a(rnd(), rnd(), id, rnd(), rnd(), rnd(), rnd(), rnd(), rnd(), rnd())
								end
								do
									println "-58" , ", " , rnd(), ", " , rnd(), ", " , rnd(), ", " , rnd(), ", " , rnd(), ", " , rnd(), ", " , rnd(), ", " , rnd(), ", " , rnd(), ", " , rnd(), ", "
									app!m3r5ar18r0r10r13r16r6r5ar18r0r10r13r5ar18r0r18r0(rnd(), rnd(), rnd(), rnd(), rnd(), rnd(), rnd(), rnd(), rnd(), rnd())
								end
							end
							do
								do
									println "-65" , ", " , rnd(), ", " , rnd(), ", " , rnd(), ", " , rnd(), ", " , rnd(), ", " , rnd(), ", " , rnd(), ", " , rnd(), ", " , rnd(), ", "
									app!m3r5ar18r0r10r13r16r6r5ar18r0r10r13r10r13r10(rnd(), rnd(), rnd(), rnd(), rnd(), rnd(), rnd(), rnd(), rnd())
								end
								do
									println "-64" , ", " , rnd(), ", " , rnd(), ", " , rnd(), ", " , rnd(), ", " , rnd(), ", " , rnd(), ", " , rnd(), ", " , rnd(), ", " , rnd(), ", "
									app!m3r5ar18r0r10r13r16r6r5ar18r0r10r13r10r13r13(rnd(), rnd(), rnd(), rnd(), rnd(), rnd(), rnd(), rnd(), rnd())
								end
							end
						end
						do
							do
								println "-77" , ", " , rnd(), ", " , rnd(), ", " , rnd(), ", " , rnd(), ", " , rnd(), ", " , rnd(), ", " , rnd(), ", " , rnd(), ", " , rnd(), ", "
								app!m3r5ar18r0r10r13r16r6r16r6r16(rnd(), rnd(), rnd(), rnd(), rnd(), rnd(), rnd(), rnd(), rnd())
							end
							do
								println "-76" , ", " , rnd(), ", " , rnd(), ", " , rnd(), ", " , rnd(), ", " , rnd(), ", " , rnd(), ", " , rnd(), ", " , rnd(), ", " , rnd(), ", "
								app!m3r5ar18r0r10r13r16r6r16r6r6(rnd(), rnd(), rnd(), rnd(), rnd(), rnd(), rnd(), rnd(), rnd())
							end
						end
					end
					do
						println "-98" , ", " , rnd(), ", " , rnd(), ", " , rnd(), ", " , rnd(), ", " , rnd(), ", " , rnd(), ", " , rnd(), ", " , rnd(), ", " , rnd(), ", "
						app!m3r23(rnd(), rnd(), rnd(), rnd(), rnd(), rnd(), rnd(), rnd(), rnd())
					end
				end
			end
			transition -> WaitForM1
		}
		region generate_m2_from_m2r11r12a_and_m2r1r17r21br19cr4r7 init INIT {
			composite state INIT init S1 {
				property r11 : Byte
				property r12 : Integer
				property a : Byte
				property r1 : Integer
				property r17 : Byte
				property r21 : Byte
				property b : Byte
				property r19 : Byte
				property c : Integer
				property r4 : Integer
				property r7 : Byte
				state S1 @diversify "not" {
					transition -> S2
					event ev : diversified?m2r11r12a
					action do
						r11 = ev.r11
						r12 = ev.r12
						a = ev.a
					end
					transition -> S3
					event ev : diversified?m2r1r17r21br19cr4r7
					action do
						r1 = ev.r1
						r17 = ev.r17
						r21 = ev.r21
						b = ev.b
						r19 = ev.r19
						c = ev.c
						r4 = ev.r4
						r7 = ev.r7
					end
				}
				state S2 @diversify "not" {
					transition -> S4
					event ev : diversified?m2r1r17r21br19cr4r7
					action do
						r1 = ev.r1
						r17 = ev.r17
						r21 = ev.r21
						b = ev.b
						r19 = ev.r19
						c = ev.c
						r4 = ev.r4
						r7 = ev.r7
					end
				}
				state S3 @diversify "not" {
					transition -> S4
					event ev : diversified?m2r11r12a
					action do
						r11 = ev.r11
						r12 = ev.r12
						a = ev.a
					end
				}
				state S4 @diversify "not" {
					on entry do
						diversified!m2(a, r4, b, rnd(), rnd(), rnd(), r21, r17, rnd(), r19, r12, rnd(), r7, r1, r11, rnd(), c, rnd(), rnd())
					end
					transition -> S1
				}
			}
		}
		region generate_m1_from_m1ar22r20_and_m1dcr14r15er9r3br2r8 init INIT {
			composite state INIT init S1 {
				property a : Byte
				property r22 : Byte
				property r20 : Byte
				property d : Byte
				property c : Integer
				property r14 : Byte
				property r15 : Integer
				property e : Integer
				property r9 : Byte
				property r3 : Integer
				property b : Byte
				property r2 : Integer
				property r8 : Integer
				state S1 @diversify "not" {
					transition -> S2
					event ev : diversified?m1ar22r20
					action do
						a = ev.a
						r22 = ev.r22
						r20 = ev.r20
					end
					transition -> S3
					event ev : diversified?m1dcr14r15er9r3br2r8
					action do
						d = ev.d
						c = ev.c
						r14 = ev.r14
						r15 = ev.r15
						e = ev.e
						r9 = ev.r9
						r3 = ev.r3
						b = ev.b
						r2 = ev.r2
						r8 = ev.r8
					end
				}
				state S2 @diversify "not" {
					transition -> S4
					event ev : diversified?m1dcr14r15er9r3br2r8
					action do
						d = ev.d
						c = ev.c
						r14 = ev.r14
						r15 = ev.r15
						e = ev.e
						r9 = ev.r9
						r3 = ev.r3
						b = ev.b
						r2 = ev.r2
						r8 = ev.r8
					end
				}
				state S3 @diversify "not" {
					transition -> S4
					event ev : diversified?m1ar22r20
					action do
						a = ev.a
						r22 = ev.r22
						r20 = ev.r20
					end
				}
				state S4 @diversify "not" {
					on entry do
						diversified!m1(r15, r14, rnd(), rnd(), r22, b, rnd(), a, c, r9, rnd(), d, r20, e, rnd(), rnd(), r2, r3, rnd(), r8, rnd())
					end
					transition -> S1
				}
			}
		}
		region generate_m2r11r12a_from_m2r11r12ar11r12_and_m2r11r12aa init INIT {
			composite state INIT init S1 {
				property r11 : Byte
				property r12 : Integer
				property a : Byte
				state S1 @diversify "not" {
					transition -> S2
					event ev : diversified?m2r11r12ar11r12
					action do
						r11 = ev.r11
						r12 = ev.r12
					end
					transition -> S3
					event ev : app?m2r11r12aa
					action do
						a = ev.a
					end
				}
				state S2 @diversify "not" {
					transition -> S4
					event ev : app?m2r11r12aa
					action do
						a = ev.a
					end
				}
				state S3 @diversify "not" {
					transition -> S4
					event ev : diversified?m2r11r12ar11r12
					action do
						r11 = ev.r11
						r12 = ev.r12
					end
				}
				state S4 @diversify "not" {
					on entry do
						diversified!m2r11r12a(rnd(), rnd(), rnd(), rnd(), r12, r11, a, rnd(), rnd(), rnd(), rnd())
					end
					transition -> S1
				}
			}
		}
		region generate_m2r1r17r21br19cr4r7_from_m2r1r17r21br19cr4r7r1r17r21_and_m2r1r17r21br19cr4r7br19cr4r7 init INIT {
			composite state INIT init S1 {
				property r1 : Integer
				property r17 : Byte
				property r21 : Byte
				property b : Byte
				property r19 : Byte
				property c : Integer
				property r4 : Integer
				property r7 : Byte
				state S1 @diversify "not" {
					transition -> S2
					event ev : diversified?m2r1r17r21br19cr4r7r1r17r21
					action do
						r1 = ev.r1
						r17 = ev.r17
						r21 = ev.r21
					end
					transition -> S3
					event ev : diversified?m2r1r17r21br19cr4r7br19cr4r7
					action do
						b = ev.b
						r19 = ev.r19
						c = ev.c
						r4 = ev.r4
						r7 = ev.r7
					end
				}
				state S2 @diversify "not" {
					transition -> S4
					event ev : diversified?m2r1r17r21br19cr4r7br19cr4r7
					action do
						b = ev.b
						r19 = ev.r19
						c = ev.c
						r4 = ev.r4
						r7 = ev.r7
					end
				}
				state S3 @diversify "not" {
					transition -> S4
					event ev : diversified?m2r1r17r21br19cr4r7r1r17r21
					action do
						r1 = ev.r1
						r17 = ev.r17
						r21 = ev.r21
					end
				}
				state S4 @diversify "not" {
					on entry do
						diversified!m2r1r17r21br19cr4r7(r7, rnd(), r1, b, r17, rnd(), c, rnd(), r19, rnd(), r21, rnd(), rnd(), rnd(), rnd(), r4)
					end
					transition -> S1
				}
			}
		}
		region generate_m1dcr14r15er9r3br2r8_from_m1dcr14r15er9r3br2r8dcr14r15er9r3b_and_m1dcr14r15er9r3br2r8r2r8 init INIT {
			composite state INIT init S1 {
				property d : Byte
				property c : Integer
				property r14 : Byte
				property r15 : Integer
				property e : Integer
				property r9 : Byte
				property r3 : Integer
				property b : Byte
				property r2 : Integer
				property r8 : Integer
				state S1 @diversify "not" {
					transition -> S2
					event ev : diversified?m1dcr14r15er9r3br2r8dcr14r15er9r3b
					action do
						d = ev.d
						c = ev.c
						r14 = ev.r14
						r15 = ev.r15
						e = ev.e
						r9 = ev.r9
						r3 = ev.r3
						b = ev.b
					end
					transition -> S3
					event ev : app?m1dcr14r15er9r3br2r8r2r8
					action do
						r2 = ev.r2
						r8 = ev.r8
					end
				}
				state S2 @diversify "not" {
					transition -> S4
					event ev : app?m1dcr14r15er9r3br2r8r2r8
					action do
						r2 = ev.r2
						r8 = ev.r8
					end
				}
				state S3 @diversify "not" {
					transition -> S4
					event ev : diversified?m1dcr14r15er9r3br2r8dcr14r15er9r3b
					action do
						d = ev.d
						c = ev.c
						r14 = ev.r14
						r15 = ev.r15
						e = ev.e
						r9 = ev.r9
						r3 = ev.r3
						b = ev.b
					end
				}
				state S4 @diversify "not" {
					on entry do
						diversified!m1dcr14r15er9r3br2r8(rnd(), c, r9, r15, r14, rnd(), rnd(), r8, r3, e, rnd(), rnd(), d, rnd(), r2, b, rnd(), rnd())
					end
					transition -> S1
				}
			}
		}
		region generate_m2r1r17r21br19cr4r7r1r17r21_from_m2r1r17r21br19cr4r7r1r17r21r1r17_and_m2r1r17r21br19cr4r7r1r17r21r21 init INIT {
			composite state INIT init S1 {
				property r1 : Integer
				property r17 : Byte
				property r21 : Byte
				state S1 @diversify "not" {
					transition -> S2
					event ev : diversified?m2r1r17r21br19cr4r7r1r17r21r1r17
					action do
						r1 = ev.r1
						r17 = ev.r17
					end
					transition -> S3
					event ev : app?m2r1r17r21br19cr4r7r1r17r21r21
					action do
						r21 = ev.r21
					end
				}
				state S2 @diversify "not" {
					transition -> S4
					event ev : app?m2r1r17r21br19cr4r7r1r17r21r21
					action do
						r21 = ev.r21
					end
				}
				state S3 @diversify "not" {
					transition -> S4
					event ev : diversified?m2r1r17r21br19cr4r7r1r17r21r1r17
					action do
						r1 = ev.r1
						r17 = ev.r17
					end
				}
				state S4 @diversify "not" {
					on entry do
						diversified!m2r1r17r21br19cr4r7r1r17r21(rnd(), rnd(), rnd(), r1, rnd(), r17, rnd(), r21, rnd(), rnd(), rnd())
					end
					transition -> S1
				}
			}
		}
		region generate_m2r1r17r21br19cr4r7br19cr4r7_from_m2r1r17r21br19cr4r7br19cr4r7br19c_and_m2r1r17r21br19cr4r7br19cr4r7r4r7 init INIT {
			composite state INIT init S1 {
				property b : Byte
				property r19 : Byte
				property c : Integer
				property r4 : Integer
				property r7 : Byte
				state S1 @diversify "not" {
					transition -> S2
					event ev : diversified?m2r1r17r21br19cr4r7br19cr4r7br19c
					action do
						b = ev.b
						r19 = ev.r19
						c = ev.c
					end
					transition -> S3
					event ev : diversified?m2r1r17r21br19cr4r7br19cr4r7r4r7
					action do
						r4 = ev.r4
						r7 = ev.r7
					end
				}
				state S2 @diversify "not" {
					transition -> S4
					event ev : diversified?m2r1r17r21br19cr4r7br19cr4r7r4r7
					action do
						r4 = ev.r4
						r7 = ev.r7
					end
				}
				state S3 @diversify "not" {
					transition -> S4
					event ev : diversified?m2r1r17r21br19cr4r7br19cr4r7br19c
					action do
						b = ev.b
						r19 = ev.r19
						c = ev.c
					end
				}
				state S4 @diversify "not" {
					on entry do
						diversified!m2r1r17r21br19cr4r7br19cr4r7(r7, c, rnd(), rnd(), rnd(), rnd(), rnd(), rnd(), rnd(), b, r4, r19, rnd())
					end
					transition -> S1
				}
			}
		}
		region generate_m1ar22r20_from_m1ar22r20ar22_and_m1ar22r20r20 init INIT {
			composite state INIT init S1 {
				property a : Byte
				property r22 : Byte
				property r20 : Byte
				state S1 @diversify "not" {
					transition -> S2
					event ev : diversified?m1ar22r20ar22
					action do
						a = ev.a
						r22 = ev.r22
					end
					transition -> S3
					event ev : app?m1ar22r20r20
					action do
						r20 = ev.r20
					end
				}
				state S2 @diversify "not" {
					transition -> S4
					event ev : app?m1ar22r20r20
					action do
						r20 = ev.r20
					end
				}
				state S3 @diversify "not" {
					transition -> S4
					event ev : diversified?m1ar22r20ar22
					action do
						a = ev.a
						r22 = ev.r22
					end
				}
				state S4 @diversify "not" {
					on entry do
						diversified!m1ar22r20(rnd(), a, rnd(), r20, rnd(), rnd(), rnd(), rnd(), rnd(), r22, rnd())
					end
					transition -> S1
				}
			}
		}
		region generate_m2r1r17r21br19cr4r7br19cr4r7br19c_from_m2r1r17r21br19cr4r7br19cr4r7br19cb_and_m2r1r17r21br19cr4r7br19cr4r7br19cr19c init INIT {
			composite state INIT init S1 {
				property b : Byte
				property r19 : Byte
				property c : Integer
				state S1 @diversify "not" {
					transition -> S2
					event ev : app?m2r1r17r21br19cr4r7br19cr4r7br19cb
					action do
						b = ev.b
					end
					transition -> S3
					event ev : diversified?m2r1r17r21br19cr4r7br19cr4r7br19cr19c
					action do
						r19 = ev.r19
						c = ev.c
					end
				}
				state S2 @diversify "not" {
					transition -> S4
					event ev : diversified?m2r1r17r21br19cr4r7br19cr4r7br19cr19c
					action do
						r19 = ev.r19
						c = ev.c
					end
				}
				state S3 @diversify "not" {
					transition -> S4
					event ev : app?m2r1r17r21br19cr4r7br19cr4r7br19cb
					action do
						b = ev.b
					end
				}
				state S4 @diversify "not" {
					on entry do
						diversified!m2r1r17r21br19cr4r7br19cr4r7br19c(rnd(), c, rnd(), r19, rnd(), b, rnd(), rnd(), rnd(), rnd(), rnd())
					end
					transition -> S1
				}
			}
		}
		region generate_m2r1r17r21br19cr4r7br19cr4r7r4r7_from_m2r1r17r21br19cr4r7br19cr4r7r4r7r4_and_m2r1r17r21br19cr4r7br19cr4r7r4r7r7 init INIT {
			composite state INIT init S1 {
				property r4 : Integer
				property r7 : Byte
				state S1 @diversify "not" {
					transition -> S2
					event ev : app?m2r1r17r21br19cr4r7br19cr4r7r4r7r4
					action do
						r4 = ev.r4
					end
					transition -> S3
					event ev : app?m2r1r17r21br19cr4r7br19cr4r7r4r7r7
					action do
						r7 = ev.r7
					end
				}
				state S2 @diversify "not" {
					transition -> S4
					event ev : app?m2r1r17r21br19cr4r7br19cr4r7r4r7r7
					action do
						r7 = ev.r7
					end
				}
				state S3 @diversify "not" {
					transition -> S4
					event ev : app?m2r1r17r21br19cr4r7br19cr4r7r4r7r4
					action do
						r4 = ev.r4
					end
				}
				state S4 @diversify "not" {
					on entry do
						diversified!m2r1r17r21br19cr4r7br19cr4r7r4r7(r4, rnd(), rnd(), rnd(), r7, rnd(), rnd(), rnd(), rnd(), rnd())
					end
					transition -> S1
				}
			}
		}
		region generate_m2r11r12ar11r12_from_m2r11r12ar11r12r11_and_m2r11r12ar11r12r12 init INIT {
			composite state INIT init S1 {
				property r11 : Byte
				property r12 : Integer
				state S1 @diversify "not" {
					transition -> S2
					event ev : app?m2r11r12ar11r12r11
					action do
						r11 = ev.r11
					end
					transition -> S3
					event ev : app?m2r11r12ar11r12r12
					action do
						r12 = ev.r12
					end
				}
				state S2 @diversify "not" {
					transition -> S4
					event ev : app?m2r11r12ar11r12r12
					action do
						r12 = ev.r12
					end
				}
				state S3 @diversify "not" {
					transition -> S4
					event ev : app?m2r11r12ar11r12r11
					action do
						r11 = ev.r11
					end
				}
				state S4 @diversify "not" {
					on entry do
						diversified!m2r11r12ar11r12(rnd(), rnd(), rnd(), rnd(), r12, rnd(), rnd(), rnd(), r11, rnd())
					end
					transition -> S1
				}
			}
		}
		region generate_m1ar22r20ar22_from_m1ar22r20ar22a_and_m1ar22r20ar22r22 init INIT {
			composite state INIT init S1 {
				property a : Byte
				property r22 : Byte
				state S1 @diversify "not" {
					transition -> S2
					event ev : app?m1ar22r20ar22a
					action do
						a = ev.a
					end
					transition -> S3
					event ev : app?m1ar22r20ar22r22
					action do
						r22 = ev.r22
					end
				}
				state S2 @diversify "not" {
					transition -> S4
					event ev : app?m1ar22r20ar22r22
					action do
						r22 = ev.r22
					end
				}
				state S3 @diversify "not" {
					transition -> S4
					event ev : app?m1ar22r20ar22a
					action do
						a = ev.a
					end
				}
				state S4 @diversify "not" {
					on entry do
						diversified!m1ar22r20ar22(rnd(), r22, rnd(), rnd(), rnd(), rnd(), rnd(), rnd(), a, rnd())
					end
					transition -> S1
				}
			}
		}
		region generate_m2r1r17r21br19cr4r7br19cr4r7br19cr19c_from_m2r1r17r21br19cr4r7br19cr4r7br19cr19cr19_and_m2r1r17r21br19cr4r7br19cr4r7br19cr19cc init INIT {
			composite state INIT init S1 {
				property r19 : Byte
				property c : Integer
				state S1 @diversify "not" {
					transition -> S2
					event ev : app?m2r1r17r21br19cr4r7br19cr4r7br19cr19cr19
					action do
						r19 = ev.r19
					end
					transition -> S3
					event ev : app?m2r1r17r21br19cr4r7br19cr4r7br19cr19cc
					action do
						c = ev.c
					end
				}
				state S2 @diversify "not" {
					transition -> S4
					event ev : app?m2r1r17r21br19cr4r7br19cr4r7br19cr19cc
					action do
						c = ev.c
					end
				}
				state S3 @diversify "not" {
					transition -> S4
					event ev : app?m2r1r17r21br19cr4r7br19cr4r7br19cr19cr19
					action do
						r19 = ev.r19
					end
				}
				state S4 @diversify "not" {
					on entry do
						diversified!m2r1r17r21br19cr4r7br19cr4r7br19cr19c(rnd(), rnd(), rnd(), r19, rnd(), rnd(), rnd(), rnd(), rnd(), c)
					end
					transition -> S1
				}
			}
		}
		region generate_m1dcr14r15er9r3br2r8dcr14r15er9r3b_from_m1dcr14r15er9r3br2r8dcr14r15er9r3bd_and_m1dcr14r15er9r3br2r8dcr14r15er9r3bcr14r15er9r3b init INIT {
			composite state INIT init S1 {
				property d : Byte
				property c : Integer
				property r14 : Byte
				property r15 : Integer
				property e : Integer
				property r9 : Byte
				property r3 : Integer
				property b : Byte
				state S1 @diversify "not" {
					transition -> S2
					event ev : app?m1dcr14r15er9r3br2r8dcr14r15er9r3bd
					action do
						d = ev.d
					end
					transition -> S3
					event ev : diversified?m1dcr14r15er9r3br2r8dcr14r15er9r3bcr14r15er9r3b
					action do
						c = ev.c
						r14 = ev.r14
						r15 = ev.r15
						e = ev.e
						r9 = ev.r9
						r3 = ev.r3
						b = ev.b
					end
				}
				state S2 @diversify "not" {
					transition -> S4
					event ev : diversified?m1dcr14r15er9r3br2r8dcr14r15er9r3bcr14r15er9r3b
					action do
						c = ev.c
						r14 = ev.r14
						r15 = ev.r15
						e = ev.e
						r9 = ev.r9
						r3 = ev.r3
						b = ev.b
					end
				}
				state S3 @diversify "not" {
					transition -> S4
					event ev : app?m1dcr14r15er9r3br2r8dcr14r15er9r3bd
					action do
						d = ev.d
					end
				}
				state S4 @diversify "not" {
					on entry do
						diversified!m1dcr14r15er9r3br2r8dcr14r15er9r3b(rnd(), rnd(), rnd(), c, rnd(), b, r9, rnd(), r14, r15, rnd(), rnd(), e, d, r3, rnd())
					end
					transition -> S1
				}
			}
		}
		region generate_m2r1r17r21br19cr4r7r1r17r21r1r17_from_m2r1r17r21br19cr4r7r1r17r21r1r17r1_and_m2r1r17r21br19cr4r7r1r17r21r1r17r17 init INIT {
			composite state INIT init S1 {
				property r1 : Integer
				property r17 : Byte
				state S1 @diversify "not" {
					transition -> S2
					event ev : app?m2r1r17r21br19cr4r7r1r17r21r1r17r1
					action do
						r1 = ev.r1
					end
					transition -> S3
					event ev : app?m2r1r17r21br19cr4r7r1r17r21r1r17r17
					action do
						r17 = ev.r17
					end
				}
				state S2 @diversify "not" {
					transition -> S4
					event ev : app?m2r1r17r21br19cr4r7r1r17r21r1r17r17
					action do
						r17 = ev.r17
					end
				}
				state S3 @diversify "not" {
					transition -> S4
					event ev : app?m2r1r17r21br19cr4r7r1r17r21r1r17r1
					action do
						r1 = ev.r1
					end
				}
				state S4 @diversify "not" {
					on entry do
						diversified!m2r1r17r21br19cr4r7r1r17r21r1r17(rnd(), rnd(), rnd(), r1, r17, rnd(), rnd(), rnd(), rnd(), rnd())
					end
					transition -> S1
				}
			}
		}
		region generate_m1dcr14r15er9r3br2r8dcr14r15er9r3bcr14r15er9r3b_from_m1dcr14r15er9r3br2r8dcr14r15er9r3bcr14r15er9r3bcr14_and_m1dcr14r15er9r3br2r8dcr14r15er9r3bcr14r15er9r3br15er9r3b init INIT {
			composite state INIT init S1 {
				property c : Integer
				property r14 : Byte
				property r15 : Integer
				property e : Integer
				property r9 : Byte
				property r3 : Integer
				property b : Byte
				state S1 @diversify "not" {
					transition -> S2
					event ev : app?m1dcr14r15er9r3br2r8dcr14r15er9r3bcr14r15er9r3bcr14
					action do
						c = ev.c
						r14 = ev.r14
					end
					transition -> S3
					event ev : diversified?m1dcr14r15er9r3br2r8dcr14r15er9r3bcr14r15er9r3br15er9r3b
					action do
						r15 = ev.r15
						e = ev.e
						r9 = ev.r9
						r3 = ev.r3
						b = ev.b
					end
				}
				state S2 @diversify "not" {
					transition -> S4
					event ev : diversified?m1dcr14r15er9r3br2r8dcr14r15er9r3bcr14r15er9r3br15er9r3b
					action do
						r15 = ev.r15
						e = ev.e
						r9 = ev.r9
						r3 = ev.r3
						b = ev.b
					end
				}
				state S3 @diversify "not" {
					transition -> S4
					event ev : app?m1dcr14r15er9r3br2r8dcr14r15er9r3bcr14r15er9r3bcr14
					action do
						c = ev.c
						r14 = ev.r14
					end
				}
				state S4 @diversify "not" {
					on entry do
						diversified!m1dcr14r15er9r3br2r8dcr14r15er9r3bcr14r15er9r3b(rnd(), rnd(), rnd(), c, r15, e, rnd(), r9, rnd(), rnd(), rnd(), r3, r14, b, rnd())
					end
					transition -> S1
				}
			}
		}
		region generate_m1dcr14r15er9r3br2r8dcr14r15er9r3bcr14r15er9r3br15er9r3b_from_m1dcr14r15er9r3br2r8dcr14r15er9r3bcr14r15er9r3br15er9r3br15_and_m1dcr14r15er9r3br2r8dcr14r15er9r3bcr14r15er9r3br15er9r3ber9r3b init INIT {
			composite state INIT init S1 {
				property r15 : Integer
				property e : Integer
				property r9 : Byte
				property r3 : Integer
				property b : Byte
				state S1 @diversify "not" {
					transition -> S2
					event ev : app?m1dcr14r15er9r3br2r8dcr14r15er9r3bcr14r15er9r3br15er9r3br15
					action do
						r15 = ev.r15
					end
					transition -> S3
					event ev : app?m1dcr14r15er9r3br2r8dcr14r15er9r3bcr14r15er9r3br15er9r3ber9r3b
					action do
						e = ev.e
						r9 = ev.r9
						r3 = ev.r3
						b = ev.b
					end
				}
				state S2 @diversify "not" {
					transition -> S4
					event ev : app?m1dcr14r15er9r3br2r8dcr14r15er9r3bcr14r15er9r3br15er9r3ber9r3b
					action do
						e = ev.e
						r9 = ev.r9
						r3 = ev.r3
						b = ev.b
					end
				}
				state S3 @diversify "not" {
					transition -> S4
					event ev : app?m1dcr14r15er9r3br2r8dcr14r15er9r3bcr14r15er9r3br15er9r3br15
					action do
						r15 = ev.r15
					end
				}
				state S4 @diversify "not" {
					on entry do
						diversified!m1dcr14r15er9r3br2r8dcr14r15er9r3bcr14r15er9r3br15er9r3b(r15, rnd(), rnd(), r9, e, r3, rnd(), b, rnd(), rnd(), rnd(), rnd(), rnd())
					end
					transition -> S1
				}
			}
		}
	}
}
thing Client includes Msgs {
	required port app {
		sends m2r11r12aa sends m1dcr14r15er9r3br2r8r2r8
		sends m2r1r17r21br19cr4r7r1r17r21r21 sends m1ar22r20r20 sends m2r1r17r21br19cr4r7br19cr4r7br19cb sends m2r1r17r21br19cr4r7br19cr4r7r4r7r4 sends m2r1r17r21br19cr4r7br19cr4r7r4r7r7 sends m2r11r12ar11r12r11 sends m2r11r12ar11r12r12 sends m1ar22r20ar22a sends m1ar22r20ar22r22 sends m2r1r17r21br19cr4r7br19cr4r7br19cr19cr19 sends m2r1r17r21br19cr4r7br19cr4r7br19cr19cc sends m1dcr14r15er9r3br2r8dcr14r15er9r3bd sends m2r1r17r21br19cr4r7r1r17r21r1r17r1 sends m2r1r17r21br19cr4r7r1r17r21r1r17r17 sends m1dcr14r15er9r3br2r8dcr14r15er9r3bcr14r15er9r3bcr14 sends m1dcr14r15er9r3br2r8dcr14r15er9r3bcr14r15er9r3br15er9r3br15 sends m1dcr14r15er9r3br2r8dcr14r15er9r3bcr14r15er9r3br15er9r3ber9r3b receives m3r23
	receives m3r5ar18r0r10r13r16r6r16r6r16 receives m3r5ar18r0r10r13r16r6r16r6r6 receives m3r5ar18r0r10r13r16r6r5ar18r0r10r13r10r13r10 receives m3r5ar18r0r10r13r16r6r5ar18r0r10r13r10r13r13 receives m3r5ar18r0r10r13r16r6r5ar18r0r10r13r5ar18r0r5a receives m3r5ar18r0r10r13r16r6r5ar18r0r10r13r5ar18r0r18r0
	}
	internal port diversified {
		sends m3 sends m3r5ar18r0r10r13r16r6 sends m3r5ar18r0r10r13r16r6r16r6r16 sends m3r5ar18r0r10r13r16r6r16r6r6 sends m3r5ar18r0r10r13r16r6r16r6 sends m3r5ar18r0r10r13r16r6r5ar18r0r10r13 sends m3r5ar18r0r10r13r16r6r5ar18r0r10r13r10r13r10 sends m3r5ar18r0r10r13r16r6r5ar18r0r10r13r10r13r13 sends m3r5ar18r0r10r13r16r6r5ar18r0r10r13r10r13 sends m3r5ar18r0r10r13r16r6r5ar18r0r10r13r5ar18r0r5a sends m3r5ar18r0r10r13r16r6r5ar18r0r10r13r5ar18r0r18r0 sends m3r5ar18r0r10r13r16r6r5ar18r0r10r13r5ar18r0 receives m3 receives m3r5ar18r0r10r13r16r6 receives m3r5ar18r0r10r13r16r6r16r6r16 receives m3r5ar18r0r10r13r16r6r16r6r6 receives m3r5ar18r0r10r13r16r6r16r6 receives m3r5ar18r0r10r13r16r6r5ar18r0r10r13 receives m3r5ar18r0r10r13r16r6r5ar18r0r10r13r10r13r10 receives m3r5ar18r0r10r13r16r6r5ar18r0r10r13r10r13r13 receives m3r5ar18r0r10r13r16r6r5ar18r0r10r13r10r13 receives m3r5ar18r0r10r13r16r6r5ar18r0r10r13r5ar18r0r5a receives m3r5ar18r0r10r13r16r6r5ar18r0r10r13r5ar18r0r18r0 receives m3r5ar18r0r10r13r16r6r5ar18r0r10r13r5ar18r0
	}
	property counter : Integer = 0
	property _a : Byte
	property _b : Byte
	property _c : Byte
	property _d : Byte
	property _e : Byte
	statechart init RUN {
		on entry do
			_a = rnd()
			_b = rnd()
		end
		state RUN {
			on entry do
				_c = rnd()
				_d = rnd()
				_e = rnd()
				println "#CLI: Come get some app!m1(" , _a , ", " , _b , ", " , _c , ", " , _d , ", " , _e , ")!"
				do
					do
						do
							do
								println "-73" , ", " , rnd(), ", " , rnd(), ", " , rnd(), ", " , rnd(), ", " , rnd(), ", " , rnd(), ", " , rnd(), ", " , _a , ", " , rnd(), ", "
								app!m1ar22r20ar22a(rnd(), rnd(), rnd(), rnd(), rnd(), rnd(), rnd(), _a, rnd())
							end
							do
								println "-72" , ", " , rnd(), ", " , rnd(), ", " , rnd(), ", " , rnd(), ", " , rnd(), ", " , rnd(), ", " , rnd(), ", " , rnd(), ", " , rnd(), ", "
								app!m1ar22r20ar22r22(rnd(), rnd(), rnd(), rnd(), rnd(), rnd(), rnd(), rnd(), rnd())
							end
						end
						do
							println "-82" , ", " , rnd(), ", " , rnd(), ", " , rnd(), ", " , rnd(), ", " , rnd(), ", " , rnd(), ", " , rnd(), ", " , rnd(), ", " , rnd(), ", "
							app!m1ar22r20r20(rnd(), rnd(), rnd(), rnd(), rnd(), rnd(), rnd(), rnd(), rnd())
						end
					end
					do
						do
							do
								println "-67" , ", " , rnd(), ", " , rnd(), ", " , rnd(), ", " , rnd(), ", " , rnd(), ", " , rnd(), ", " , rnd(), ", " , rnd(), ", " , _d , ", "
								app!m1dcr14r15er9r3br2r8dcr14r15er9r3bd(rnd(), rnd(), rnd(), rnd(), rnd(), rnd(), rnd(), rnd(), _d)
							end
							do
								do
									println "-61" , ", " , rnd(), ", " , rnd(), ", " , rnd(), ", " , rnd(), ", " , rnd(), ", " , rnd(), ", " , _c , ", " , rnd(), ", " , rnd(), ", " , rnd(), ", "
									app!m1dcr14r15er9r3br2r8dcr14r15er9r3bcr14r15er9r3bcr14(rnd(), rnd(), rnd(), rnd(), rnd(), rnd(), _c, rnd(), rnd(), rnd())
								end
								do
									do
										println "-57" , ", " , rnd(), ", " , rnd(), ", " , rnd(), ", " , rnd(), ", " , rnd(), ", " , rnd(), ", " , rnd(), ", " , rnd(), ", " , rnd(), ", "
										app!m1dcr14r15er9r3br2r8dcr14r15er9r3bcr14r15er9r3br15er9r3br15(rnd(), rnd(), rnd(), rnd(), rnd(), rnd(), rnd(), rnd(), rnd())
									end
									do
										println "-56" , ", " , rnd(), ", " , rnd(), ", " , rnd(), ", " , rnd(), ", " , rnd(), ", " , rnd(), ", " , rnd(), ", " , _b , ", " , _e , ", " , rnd(), ", " , rnd(), ", " , rnd(), ", "
										app!m1dcr14r15er9r3br2r8dcr14r15er9r3bcr14r15er9r3br15er9r3ber9r3b(rnd(), rnd(), rnd(), rnd(), rnd(), rnd(), rnd(), _b, _e, rnd(), rnd(), rnd())
									end
								end
							end
						end
						do
							println "-90" , ", " , rnd(), ", " , rnd(), ", " , rnd(), ", " , rnd(), ", " , rnd(), ", " , rnd(), ", " , rnd(), ", " , rnd(), ", " , rnd(), ", " , rnd(), ", "
							app!m1dcr14r15er9r3br2r8r2r8(rnd(), rnd(), rnd(), rnd(), rnd(), rnd(), rnd(), rnd(), rnd(), rnd())
						end
					end
				end
				println "#CLI: Come get some app!m2(" , _a , ", " , _b , ", " , _c , ")!"
				do
					do
						do
							do
								println "-75" , ", " , rnd(), ", " , rnd(), ", " , rnd(), ", " , rnd(), ", " , rnd(), ", " , rnd(), ", " , rnd(), ", " , rnd(), ", " , rnd(), ", "
								app!m2r11r12ar11r12r11(rnd(), rnd(), rnd(), rnd(), rnd(), rnd(), rnd(), rnd(), rnd())
							end
							do
								println "-74" , ", " , rnd(), ", " , rnd(), ", " , rnd(), ", " , rnd(), ", " , rnd(), ", " , rnd(), ", " , rnd(), ", " , rnd(), ", " , rnd(), ", "
								app!m2r11r12ar11r12r12(rnd(), rnd(), rnd(), rnd(), rnd(), rnd(), rnd(), rnd(), rnd())
							end
						end
						do
							println "-94" , ", " , rnd(), ", " , rnd(), ", " , rnd(), ", " , rnd(), ", " , rnd(), ", " , rnd(), ", " , rnd(), ", " , _a , ", " , rnd(), ", "
							app!m2r11r12aa(rnd(), rnd(), rnd(), rnd(), rnd(), rnd(), rnd(), _a, rnd())
						end
					end
					do
						do
							do
								do
									println "-63" , ", " , rnd(), ", " , rnd(), ", " , rnd(), ", " , rnd(), ", " , rnd(), ", " , rnd(), ", " , rnd(), ", " , rnd(), ", " , rnd(), ", "
									app!m2r1r17r21br19cr4r7r1r17r21r1r17r1(rnd(), rnd(), rnd(), rnd(), rnd(), rnd(), rnd(), rnd(), rnd())
								end
								do
									println "-62" , ", " , rnd(), ", " , rnd(), ", " , rnd(), ", " , rnd(), ", " , rnd(), ", " , rnd(), ", " , rnd(), ", " , rnd(), ", " , rnd(), ", "
									app!m2r1r17r21br19cr4r7r1r17r21r1r17r17(rnd(), rnd(), rnd(), rnd(), rnd(), rnd(), rnd(), rnd(), rnd())
								end
							end
							do
								println "-88" , ", " , rnd(), ", " , rnd(), ", " , rnd(), ", " , rnd(), ", " , rnd(), ", " , rnd(), ", " , rnd(), ", " , rnd(), ", " , rnd(), ", "
								app!m2r1r17r21br19cr4r7r1r17r21r21(rnd(), rnd(), rnd(), rnd(), rnd(), rnd(), rnd(), rnd(), rnd())
							end
						end
						do
							do
								do
									println "-81" , ", " , rnd(), ", " , _b , ", " , rnd(), ", " , rnd(), ", " , rnd(), ", " , rnd(), ", " , rnd(), ", " , rnd(), ", " , rnd(), ", "
									app!m2r1r17r21br19cr4r7br19cr4r7br19cb(rnd(), _b, rnd(), rnd(), rnd(), rnd(), rnd(), rnd(), rnd())
								end
								do
									do
										println "-71" , ", " , rnd(), ", " , rnd(), ", " , rnd(), ", " , rnd(), ", " , rnd(), ", " , rnd(), ", " , rnd(), ", " , rnd(), ", " , rnd(), ", "
										app!m2r1r17r21br19cr4r7br19cr4r7br19cr19cr19(rnd(), rnd(), rnd(), rnd(), rnd(), rnd(), rnd(), rnd(), rnd())
									end
									do
										println "-70" , ", " , rnd(), ", " , rnd(), ", " , rnd(), ", " , rnd(), ", " , _c , ", " , rnd(), ", " , rnd(), ", " , rnd(), ", " , rnd(), ", "
										app!m2r1r17r21br19cr4r7br19cr4r7br19cr19cc(rnd(), rnd(), rnd(), rnd(), _c, rnd(), rnd(), rnd(), rnd())
									end
								end
							end
							do
								do
									println "-79" , ", " , rnd(), ", " , rnd(), ", " , rnd(), ", " , rnd(), ", " , rnd(), ", " , rnd(), ", " , rnd(), ", " , rnd(), ", " , rnd(), ", "
									app!m2r1r17r21br19cr4r7br19cr4r7r4r7r4(rnd(), rnd(), rnd(), rnd(), rnd(), rnd(), rnd(), rnd(), rnd())
								end
								do
									println "-78" , ", " , rnd(), ", " , rnd(), ", " , rnd(), ", " , rnd(), ", " , rnd(), ", " , rnd(), ", " , rnd(), ", " , rnd(), ", " , rnd(), ", "
									app!m2r1r17r21br19cr4r7br19cr4r7r4r7r7(rnd(), rnd(), rnd(), rnd(), rnd(), rnd(), rnd(), rnd(), rnd())
								end
							end
						end
					end
				end
				counter ++
			end
			transition -> STOP
			guard counter == 100
			transition -> RUN
			event e : diversified?m3
			guard e.a == _a
			action do
				println "#CLI: Ooh, I needed that app?m3(" , e.a , ")!"
				println "#CLI: We meet again, Doctor Jones!"
			end
			transition -> ERROR
			event e : diversified?m3
			guard e.a != _a
			action do
				println "#CLI: Ooh, I needed that app?m3(" , e.a , ")!"
				println "#CLI: Damn, you re ugly."
			end
		}
		final state STOP {
			on entry println "#CLI: What are you waitin for? Christmas?"
		}
		final state ERROR {
			on entry println "#CLI: Heh, heh, heh... what a mess!"
		}
		region generate_m3_from_m3r5ar18r0r10r13r16r6_and_m3r23 init INIT {
			composite state INIT init S1 {
				property r5 : Byte
				property a : Integer
				property r18 : Byte
				property r0 : Integer
				property r10 : Integer
				property r13 : Byte
				property r16 : Integer
				property r6 : Integer
				property r23 : Byte
				state S1 @diversify "not" {
					transition -> S2
					event ev : diversified?m3r5ar18r0r10r13r16r6
					action do
						r5 = ev.r5
						a = ev.a
						r18 = ev.r18
						r0 = ev.r0
						r10 = ev.r10
						r13 = ev.r13
						r16 = ev.r16
						r6 = ev.r6
					end
					transition -> S3
					event ev : app?m3r23
					action do
						r23 = ev.r23
					end
				}
				state S2 @diversify "not" {
					transition -> S4
					event ev : app?m3r23
					action do
						r23 = ev.r23
					end
				}
				state S3 @diversify "not" {
					transition -> S4
					event ev : diversified?m3r5ar18r0r10r13r16r6
					action do
						r5 = ev.r5
						a = ev.a
						r18 = ev.r18
						r0 = ev.r0
						r10 = ev.r10
						r13 = ev.r13
						r16 = ev.r16
						r6 = ev.r6
					end
				}
				state S4 @diversify "not" {
					on entry do
						diversified!m3(rnd(), r16, r6, r10, r0, rnd(), r23, r5, rnd(), rnd(), a, rnd(), r18, r13, rnd(), rnd(), rnd())
					end
					transition -> S1
				}
			}
		}
		region generate_m3r5ar18r0r10r13r16r6_from_m3r5ar18r0r10r13r16r6r5ar18r0r10r13_and_m3r5ar18r0r10r13r16r6r16r6 init INIT {
			composite state INIT init S1 {
				property r5 : Byte
				property a : Integer
				property r18 : Byte
				property r0 : Integer
				property r10 : Integer
				property r13 : Byte
				property r16 : Integer
				property r6 : Integer
				state S1 @diversify "not" {
					transition -> S2
					event ev : diversified?m3r5ar18r0r10r13r16r6r5ar18r0r10r13
					action do
						r5 = ev.r5
						a = ev.a
						r18 = ev.r18
						r0 = ev.r0
						r10 = ev.r10
						r13 = ev.r13
					end
					transition -> S3
					event ev : diversified?m3r5ar18r0r10r13r16r6r16r6
					action do
						r16 = ev.r16
						r6 = ev.r6
					end
				}
				state S2 @diversify "not" {
					transition -> S4
					event ev : diversified?m3r5ar18r0r10r13r16r6r16r6
					action do
						r16 = ev.r16
						r6 = ev.r6
					end
				}
				state S3 @diversify "not" {
					transition -> S4
					event ev : diversified?m3r5ar18r0r10r13r16r6r5ar18r0r10r13
					action do
						r5 = ev.r5
						a = ev.a
						r18 = ev.r18
						r0 = ev.r0
						r10 = ev.r10
						r13 = ev.r13
					end
				}
				state S4 @diversify "not" {
					on entry do
						diversified!m3r5ar18r0r10r13r16r6(r5, rnd(), r6, rnd(), r18, r0, rnd(), rnd(), a, r13, rnd(), r16, rnd(), r10, rnd(), rnd())
					end
					transition -> S1
				}
			}
		}
		region generate_m3r5ar18r0r10r13r16r6r16r6_from_m3r5ar18r0r10r13r16r6r16r6r16_and_m3r5ar18r0r10r13r16r6r16r6r6 init INIT {
			composite state INIT init S1 {
				property r16 : Integer
				property r6 : Integer
				state S1 @diversify "not" {
					transition -> S2
					event ev : app?m3r5ar18r0r10r13r16r6r16r6r16
					action do
						r16 = ev.r16
					end
					transition -> S3
					event ev : app?m3r5ar18r0r10r13r16r6r16r6r6
					action do
						r6 = ev.r6
					end
				}
				state S2 @diversify "not" {
					transition -> S4
					event ev : app?m3r5ar18r0r10r13r16r6r16r6r6
					action do
						r6 = ev.r6
					end
				}
				state S3 @diversify "not" {
					transition -> S4
					event ev : app?m3r5ar18r0r10r13r16r6r16r6r16
					action do
						r16 = ev.r16
					end
				}
				state S4 @diversify "not" {
					on entry do
						diversified!m3r5ar18r0r10r13r16r6r16r6(rnd(), r16, rnd(), rnd(), r6, rnd(), rnd(), rnd(), rnd(), rnd())
					end
					transition -> S1
				}
			}
		}
		region generate_m3r5ar18r0r10r13r16r6r5ar18r0r10r13_from_m3r5ar18r0r10r13r16r6r5ar18r0r10r13r5ar18r0_and_m3r5ar18r0r10r13r16r6r5ar18r0r10r13r10r13 init INIT {
			composite state INIT init S1 {
				property r5 : Byte
				property a : Integer
				property r18 : Byte
				property r0 : Integer
				property r10 : Integer
				property r13 : Byte
				state S1 @diversify "not" {
					transition -> S2
					event ev : diversified?m3r5ar18r0r10r13r16r6r5ar18r0r10r13r5ar18r0
					action do
						r5 = ev.r5
						a = ev.a
						r18 = ev.r18
						r0 = ev.r0
					end
					transition -> S3
					event ev : diversified?m3r5ar18r0r10r13r16r6r5ar18r0r10r13r10r13
					action do
						r10 = ev.r10
						r13 = ev.r13
					end
				}
				state S2 @diversify "not" {
					transition -> S4
					event ev : diversified?m3r5ar18r0r10r13r16r6r5ar18r0r10r13r10r13
					action do
						r10 = ev.r10
						r13 = ev.r13
					end
				}
				state S3 @diversify "not" {
					transition -> S4
					event ev : diversified?m3r5ar18r0r10r13r16r6r5ar18r0r10r13r5ar18r0
					action do
						r5 = ev.r5
						a = ev.a
						r18 = ev.r18
						r0 = ev.r0
					end
				}
				state S4 @diversify "not" {
					on entry do
						diversified!m3r5ar18r0r10r13r16r6r5ar18r0r10r13(rnd(), rnd(), rnd(), r10, rnd(), r0, r5, rnd(), r18, rnd(), rnd(), a, rnd(), r13)
					end
					transition -> S1
				}
			}
		}
		region generate_m3r5ar18r0r10r13r16r6r5ar18r0r10r13r10r13_from_m3r5ar18r0r10r13r16r6r5ar18r0r10r13r10r13r10_and_m3r5ar18r0r10r13r16r6r5ar18r0r10r13r10r13r13 init INIT {
			composite state INIT init S1 {
				property r10 : Integer
				property r13 : Byte
				state S1 @diversify "not" {
					transition -> S2
					event ev : app?m3r5ar18r0r10r13r16r6r5ar18r0r10r13r10r13r10
					action do
						r10 = ev.r10
					end
					transition -> S3
					event ev : app?m3r5ar18r0r10r13r16r6r5ar18r0r10r13r10r13r13
					action do
						r13 = ev.r13
					end
				}
				state S2 @diversify "not" {
					transition -> S4
					event ev : app?m3r5ar18r0r10r13r16r6r5ar18r0r10r13r10r13r13
					action do
						r13 = ev.r13
					end
				}
				state S3 @diversify "not" {
					transition -> S4
					event ev : app?m3r5ar18r0r10r13r16r6r5ar18r0r10r13r10r13r10
					action do
						r10 = ev.r10
					end
				}
				state S4 @diversify "not" {
					on entry do
						diversified!m3r5ar18r0r10r13r16r6r5ar18r0r10r13r10r13(rnd(), r10, rnd(), rnd(), rnd(), rnd(), rnd(), rnd(), rnd(), r13)
					end
					transition -> S1
				}
			}
		}
		region generate_m3r5ar18r0r10r13r16r6r5ar18r0r10r13r5ar18r0_from_m3r5ar18r0r10r13r16r6r5ar18r0r10r13r5ar18r0r5a_and_m3r5ar18r0r10r13r16r6r5ar18r0r10r13r5ar18r0r18r0 init INIT {
			composite state INIT init S1 {
				property r5 : Byte
				property a : Integer
				property r18 : Byte
				property r0 : Integer
				state S1 @diversify "not" {
					transition -> S2
					event ev : app?m3r5ar18r0r10r13r16r6r5ar18r0r10r13r5ar18r0r5a
					action do
						r5 = ev.r5
						a = ev.a
					end
					transition -> S3
					event ev : app?m3r5ar18r0r10r13r16r6r5ar18r0r10r13r5ar18r0r18r0
					action do
						r18 = ev.r18
						r0 = ev.r0
					end
				}
				state S2 @diversify "not" {
					transition -> S4
					event ev : app?m3r5ar18r0r10r13r16r6r5ar18r0r10r13r5ar18r0r18r0
					action do
						r18 = ev.r18
						r0 = ev.r0
					end
				}
				state S3 @diversify "not" {
					transition -> S4
					event ev : app?m3r5ar18r0r10r13r16r6r5ar18r0r10r13r5ar18r0r5a
					action do
						r5 = ev.r5
						a = ev.a
					end
				}
				state S4 @diversify "not" {
					on entry do
						diversified!m3r5ar18r0r10r13r16r6r5ar18r0r10r13r5ar18r0(rnd(), r18, a, r5, rnd(), rnd(), rnd(), r0, rnd(), rnd(), rnd(), rnd())
					end
					transition -> S1
				}
			}
		}
	}
}
protocol Default ;

configuration test {
	instance app : App
	instance client1 : Client
	connector client1.app => app . app
}
