datatype Byte<1>
	@type_checker "Byte"
	@java_type "byte"
datatype Integer<2>
	@type_checker "Integer"
	@java_type "short"
thing fragment Msgs {
	message m1(r18 : Byte, a : Byte@upsize "not", r9 : Byte, r301 : Byte, r5 : Byte, r124 : Byte, r158 : Byte, r265 : Byte, r31 : Byte, r24 : Byte, r2 : Byte, r93 : Byte, e : Byte, r68 : Byte, r53 : Byte, b : Byte@upsize "not", c : Byte, d : Byte, r193 : Byte, r229 : Byte, r54 : Byte)
	@code "0x70"
	message m2(r29 : Byte, r230 : Byte, r35 : Byte, r194 : Byte, r94 : Byte, r42 : Byte, r302 : Byte, r55 : Byte, r159 : Byte, r7 : Byte, r125 : Byte, b : Byte@upsize "not", c : Byte, r69 : Byte, r14 : Byte, r1 : Byte, r266 : Byte, r11 : Byte, a : Byte@upsize "not")
	@code "0x71"
	message m1bisbis(r95 : Byte, e : Byte, r16 : Byte, c : Byte, r40 : Byte, r6 : Byte, r195 : Byte, a : Byte @upsize "not", r70 : Byte, r45 : Byte, r126 : Byte, r303 : Byte, r231 : Byte, r267 : Byte, r13 : Byte, d : Byte, b : Byte @upsize "not", r28 : Byte, r2 : Byte, r56 : Byte, r160 : Byte)
	@code "0x72"
	message m1bis(e : Byte, r2 : Byte, r33 : Byte, r6 : Byte, r161 : Byte, r16 : Byte, r127 : Byte, r71 : Byte, r13 : Byte, r57 : Byte, r232 : Byte, r304 : Byte, c : Byte, r43 : Byte, a : Byte @upsize "not", r196 : Byte, r96 : Byte, r22 : Byte, r268 : Byte, b : Byte @upsize "not", d : Byte)
	@code "0x73"
	message m2bisbisbisbis(r305 : Byte, r1 : Byte, r97 : Byte, r269 : Byte, r7 : Byte, r197 : Byte, c : Byte, r10 : Byte, r233 : Byte, r162 : Byte, a : Byte @upsize "not", r58 : Byte, r52 : Byte, r34 : Byte, r72 : Byte, r128 : Byte, b : Byte @upsize "not", r26 : Byte, r19 : Byte)
	@code "0x74"
	message m1bisbisbis(r129 : Byte, r38 : Byte, r306 : Byte, c : Byte, r6 : Byte, r59 : Byte, r2 : Byte, r16 : Byte, r28 : Byte, r163 : Byte, r98 : Byte, r270 : Byte, r73 : Byte, r198 : Byte, r49 : Byte, b : Byte @upsize "not", a : Byte @upsize "not", r234 : Byte, d : Byte, e : Byte, r13 : Byte)
	@code "0x75"
	message m2bisbis(r235 : Byte, r26 : Byte, r32 : Byte, r164 : Byte, c : Byte, r307 : Byte, r130 : Byte, r199 : Byte, b : Byte @upsize "not", r1 : Byte, r99 : Byte, r271 : Byte, r19 : Byte, r10 : Byte, r51 : Byte, a : Byte @upsize "not", r60 : Byte, r74 : Byte, r7 : Byte)
	@code "0x76"
	message m3(r3 : Byte, r308 : Byte, r131 : Byte, r61 : Byte, r36 : Byte, r0 : Byte, a : Byte, r12 : Byte, r50 : Byte, r25 : Byte, r75 : Byte, r17 : Byte, r100 : Byte, r236 : Byte, r165 : Byte, r272 : Byte, r200 : Byte)
	@code "0x77"
	message m2bis(r237 : Byte, r47 : Byte, r1 : Byte, b : Byte @upsize "not", r201 : Byte, c : Byte, r273 : Byte, a : Byte @upsize "not", r41 : Byte, r7 : Byte, r166 : Byte, r15 : Byte, r76 : Byte, r30 : Byte, r101 : Byte, r10 : Byte, r62 : Byte, r132 : Byte, r309 : Byte)
	@code "0x78"
	message m3bis(r8 : Byte, r238 : Byte, a : Byte, r39 : Byte, r167 : Byte, r48 : Byte, r102 : Byte, r274 : Byte, r310 : Byte, r4 : Byte, r63 : Byte, r202 : Byte, r0 : Byte, r77 : Byte, r23 : Byte, r133 : Byte, r20 : Byte)
	@code "0x79"
	message m3bisbisbis(r4 : Byte, r275 : Byte, r311 : Byte, r37 : Byte, r168 : Byte, r64 : Byte, r103 : Byte, r203 : Byte, r78 : Byte, r27 : Byte, r0 : Byte, r134 : Byte, r21 : Byte, a : Byte, r239 : Byte, r8 : Byte, r44 : Byte)
	@code "0x7A"
	message m3bisbisbisbis(r27 : Byte, r104 : Byte, r44 : Byte, r0 : Byte, r4 : Byte, r135 : Byte, a : Byte, r65 : Byte, r21 : Byte, r312 : Byte, r8 : Byte, r240 : Byte, r276 : Byte, r37 : Byte, r204 : Byte, r169 : Byte, r79 : Byte)
	@code "0x7B"
	message m3bisbis(r0 : Byte, r46 : Byte, r37 : Byte, r136 : Byte, r313 : Byte, r21 : Byte, r27 : Byte, r241 : Byte, r170 : Byte, r80 : Byte, a : Byte, r4 : Byte, r205 : Byte, r66 : Byte, r105 : Byte, r8 : Byte, r277 : Byte)
	@code "0x7C"
	message m2bisbisbis(r242 : Byte, r81 : Byte, r67 : Byte, b : Byte @upsize "not", r1 : Byte, r278 : Byte, r34 : Byte, r171 : Byte, r106 : Byte, r26 : Byte, r52 : Byte, r206 : Byte, r137 : Byte, a : Byte @upsize "not", r19 : Byte, r314 : Byte, c : Byte, r10 : Byte, r7 : Byte)
	@code "0x7D"
	message m2bisbisbisbisbis(r315 : Byte, r52 : Byte, r10 : Byte, r207 : Byte, r172 : Byte, r1 : Byte, r138 : Byte, c : Byte, r58 : Byte, r82 : Byte, r279 : Byte, r19 : Byte, r7 : Byte, r34 : Byte, a : Byte @upsize "not", b : Byte @upsize "not", r243 : Byte, r26 : Byte, r107 : Byte)
	@code "0x7E"
	message m3r50(r173 : Byte, r244 : Byte, r83 : Byte, r316 : Byte, r108 : Byte, r280 : Byte, r208 : Byte, r139 : Byte, r50 : Byte)
	@code "0x7F"
	message m3r17r0ar25r61r3r36r12(r84 : Byte, r12 : Byte, r281 : Byte, r3 : Byte, r317 : Byte, r209 : Byte, a : Byte, r0 : Byte, r140 : Byte, r245 : Byte, r25 : Byte, r17 : Byte, r174 : Byte, r109 : Byte, r61 : Byte, r36 : Byte)
	@code "0x80"
	message m3bisr48r23ar4(r282 : Byte, r318 : Byte, r110 : Byte, r246 : Byte, r141 : Byte, a : Byte, r48 : Byte, r23 : Byte, r210 : Byte, r85 : Byte, r175 : Byte, r4 : Byte)
	@code "0x81"
	message m3bisr20r63r0r39r8(r211 : Byte, r0 : Byte, r20 : Byte, r283 : Byte, r39 : Byte, r319 : Byte, r247 : Byte, r8 : Byte, r176 : Byte, r63 : Byte, r142 : Byte, r111 : Byte, r86 : Byte)
	@code "0x82"
	message m3bisbisr4ar46r66r27r21r0(r284 : Byte, r21 : Byte, r112 : Byte, r66 : Byte, r320 : Byte, r143 : Byte, a : Byte, r46 : Byte, r248 : Byte, r177 : Byte, r212 : Byte, r4 : Byte, r27 : Byte, r87 : Byte, r0 : Byte)
	@code "0x83"
	message m3bisbisr8r37(r213 : Byte, r249 : Byte, r178 : Byte, r144 : Byte, r8 : Byte, r113 : Byte, r88 : Byte, r321 : Byte, r285 : Byte, r37 : Byte)
	@code "0x84"
	message m3bisbisbisr64r37r44r8r4r0(r37 : Byte, r286 : Byte, r44 : Byte, r0 : Byte, r8 : Byte, r4 : Byte, r214 : Byte, r179 : Byte, r250 : Byte, r145 : Byte, r64 : Byte, r114 : Byte, r89 : Byte, r322 : Byte)
	@code "0x85"
	message m3bisbisbisar27r21(r27 : Byte, r251 : Byte, r180 : Byte, r115 : Byte, a : Byte, r146 : Byte, r90 : Byte, r323 : Byte, r21 : Byte, r287 : Byte, r215 : Byte)
	@code "0x86"
	message m3bisbisbisbisr37r8r21r0r44ar4(r37 : Byte, r21 : Byte, r8 : Byte, r44 : Byte, r147 : Byte, r91 : Byte, a : Byte, r181 : Byte, r252 : Byte, r288 : Byte, r4 : Byte, r116 : Byte, r0 : Byte, r324 : Byte, r216 : Byte)
	@code "0x87"
	message m3bisbisbisbisr27r65(r92 : Byte, r217 : Byte, r253 : Byte, r27 : Byte, r182 : Byte, r289 : Byte, r65 : Byte, r117 : Byte, r148 : Byte, r325 : Byte)
	@code "0x88"
	message m2bisbisbisbisbisbis(r58 : Byte, r26 : Byte, r218 : Byte, r19 : Byte, r290 : Byte, r10 : Byte, c : Byte, r1 : Byte, r52 : Byte, r34 : Byte, r118 : Byte, r149 : Byte, r7 : Byte, b : Byte @upsize "not", r82 : Byte, r326 : Byte, a : Byte @upsize "not", r183 : Byte, r254 : Byte)
	@code "0x89"
	message m3r17r0ar25r61r3r36r12bis(r61 : Byte, a : Byte, r12 : Byte, r327 : Byte, r255 : Byte, r219 : Byte, r25 : Byte, r119 : Byte, r84 : Byte, r291 : Byte, r184 : Byte, r3 : Byte, r150 : Byte, r0 : Byte, r17 : Byte, r36 : Byte)
	@code "0x8A"
	message m3bisr20r63r0r39r8bis(r0 : Byte, r256 : Byte, r220 : Byte, r292 : Byte, r63 : Byte, r8 : Byte, r120 : Byte, r39 : Byte, r328 : Byte, r86 : Byte, r20 : Byte, r185 : Byte, r151 : Byte)
	@code "0x8B"
	message m3bisbisr8r37bis(r257 : Byte, r293 : Byte, r37 : Byte, r121 : Byte, r186 : Byte, r8 : Byte, r152 : Byte, r329 : Byte, r221 : Byte, r88 : Byte)
	@code "0x8C"
	message m3bisbisbisar27r21bis(r294 : Byte, r153 : Byte, r330 : Byte, r222 : Byte, r21 : Byte, r90 : Byte, r258 : Byte, r122 : Byte, r27 : Byte, r187 : Byte, a : Byte)
	@code "0x8D"
	message m3bisbisbisbisr27r65bis(r188 : Byte, r223 : Byte, r259 : Byte, r27 : Byte, r331 : Byte, r295 : Byte, r123 : Byte, r92 : Byte, r154 : Byte, r65 : Byte)
	@code "0x8E"
	message m3r17r0ar25r61r3r36r12bisbis(r12 : Byte, r0 : Byte, r3 : Byte, r84 : Byte, r17 : Byte, r224 : Byte, r61 : Byte, r332 : Byte, r25 : Byte, r119 : Byte, a : Byte, r189 : Byte, r36 : Byte, r260 : Byte, r296 : Byte, r155 : Byte)
	@code "0x8F"
	message m3bisbisr8r37bisbis(r37 : Byte, r121 : Byte, r333 : Byte, r156 : Byte, r88 : Byte, r297 : Byte, r190 : Byte, r225 : Byte, r8 : Byte, r261 : Byte)
	@code "0x90"
	message m3bisbisbisbisr27r65bisbis(r334 : Byte, r226 : Byte, r65 : Byte, r157 : Byte, r298 : Byte, r262 : Byte, r123 : Byte, r191 : Byte, r92 : Byte, r27 : Byte)
	@code "0x91"
	message m3bisbisr8r37bisbisbis(r8 : Byte, r156 : Byte, r299 : Byte, r88 : Byte, r335 : Byte, r37 : Byte, r263 : Byte, r227 : Byte, r192 : Byte, r121 : Byte)
	@code "0x92"
	message m3bisbisr8r37bisbisbisbis(r264 : Byte, r88 : Byte, r156 : Byte, r336 : Byte, r192 : Byte, r300 : Byte, r228 : Byte, r8 : Byte, r121 : Byte, r37 : Byte)
	@code "0x93"
	function rnd() : Byte do
		return `Math.floor(Math.random() * Math.floor(256))`
	end
}
thing App includes Msgs {
	provided port app {
		sends m3r50
	sends m3r17r0ar25r61r3r36r12 sends m3bisr48r23ar4 sends m3bisr20r63r0r39r8 sends m3bisbisr4ar46r66r27r21r0 sends m3bisbisr8r37 sends m3bisbisbisr64r37r44r8r4r0 sends m3bisbisbisar27r21 sends m3bisbisbisbisr37r8r21r0r44ar4 sends m3bisbisbisbisr27r65 sends m3r17r0ar25r61r3r36r12bis sends m3bisr20r63r0r39r8bis sends m3bisbisr8r37bis sends m3bisbisbisar27r21bis sends m3bisbisbisbisr27r65bis sends m3r17r0ar25r61r3r36r12bisbis sends m3bisbisr8r37bisbis sends m3bisbisbisbisr27r65bisbis sends m3bisbisr8r37bisbisbis sends m3bisbisr8r37bisbisbisbis receives m1 receives m2
		receives m1bis receives m2bis receives m2bisbis receives m1bisbis receives m2bisbisbis receives m1bisbisbis receives m2bisbisbisbis receives m2bisbisbisbisbis receives m2bisbisbisbisbisbis
	}
	internal port diversified {
	}
	property id : Byte
	statechart init WaitForM1 {
		state WaitForM1 {
			transition -> WaitForM2
			event e : app?m1
			action do
				id = e.a
				println "#APP: Ooh, I needed that app?m1(" , e.a , ", " , e.b , ", " , e.c , ", " , e.d , ", " , e.e , ")!"
			end
			transition -> WaitForM2
			event e : app?m1bis
			action do
				id = e.a
				println "#APP: Ooh, I needed that app?m1(" , e.a , ", " , e.b , ", " , e.c , ", " , e.d , ", " , e.e , ")!"
			end
			transition -> WaitForM2
			event e : app?m1bisbis
			action do
				id = e.a
				println "#APP: Ooh, I needed that app?m1(" , e.a , ", " , e.b , ", " , e.c , ", " , e.d , ", " , e.e , ")!"
			end
			transition -> WaitForM2
			event e : app?m1bisbisbis
			action do
				id = e.a
				println "#APP: Ooh, I needed that app?m1(" , e.a , ", " , e.b , ", " , e.c , ", " , e.d , ", " , e.e , ")!"
			end
		}
		state WaitForM2 {
			transition -> SendAck
			event e : app?m2
			action println "#APP: Ooh, I needed that app?m2(" , e.a , ", " , e.b , ", " , e.c , ")!"
			transition -> SendAck
			event e : app?m2bis
			action println "#APP: Ooh, I needed that app?m2(" , e.a , ", " , e.b , ", " , e.c , ")!"
			transition -> SendAck
			event e : app?m2bisbis
			action println "#APP: Ooh, I needed that app?m2(" , e.a , ", " , e.b , ", " , e.c , ")!"
			transition -> SendAck
			event e : app?m2bisbisbis
			action println "#APP: Ooh, I needed that app?m2(" , e.a , ", " , e.b , ", " , e.c , ")!"
			transition -> SendAck
			event e : app?m2bisbisbisbis
			action println "#APP: Ooh, I needed that app?m2(" , e.a , ", " , e.b , ", " , e.c , ")!"
			transition -> SendAck
			event e : app?m2bisbisbisbisbis
			action println "#APP: Ooh, I needed that app?m2(" , e.a , ", " , e.b , ", " , e.c , ")!"
			transition -> SendAck
			event e : app?m2bisbisbisbisbisbis
			action println "#APP: Ooh, I needed that app?m2(" , e.a , ", " , e.b , ", " , e.c , ")!"
		}
		state SendAck {
			on entry do
				println "#APP: Come get some app!m3(" , id , ")!"
				if (rnd()< 244) do
					do
						do
							println "127" , ", " , rnd(), ", " , rnd(), ", " , rnd(), ", " , rnd(), ", " , rnd(), ", " , rnd(), ", " , rnd(), ", " , rnd(), ", " , rnd(), ", "
							app!m3r50(rnd(), rnd(), rnd(), rnd(), rnd(), rnd(), rnd(), rnd(), rnd())
						end
						if (rnd()< 113) do
							do
								println "-128" , ", " , rnd(), ", " , rnd(), ", " , rnd(), ", " , rnd(), ", " , rnd(), ", " , rnd(), ", " , id , ", " , rnd(), ", " , rnd(), ", " , rnd(), ", " , rnd(), ", " , rnd(), ", " , rnd(), ", " , rnd(), ", " , rnd(), ", " , rnd(), ", "
								app!m3r17r0ar25r61r3r36r12(rnd(), rnd(), rnd(), rnd(), rnd(), rnd(), id, rnd(), rnd(), rnd(), rnd(), rnd(), rnd(), rnd(), rnd(), rnd())
							end
						end
						else do
							if (rnd()< 241) do
								do
									println "-118" , ", " , rnd(), ", " , id , ", " , rnd(), ", " , rnd(), ", " , rnd(), ", " , rnd(), ", " , rnd(), ", " , rnd(), ", " , rnd(), ", " , rnd(), ", " , rnd(), ", " , rnd(), ", " , rnd(), ", " , rnd(), ", " , rnd(), ", " , rnd(), ", "
									app!m3r17r0ar25r61r3r36r12bis(rnd(), id, rnd(), rnd(), rnd(), rnd(), rnd(), rnd(), rnd(), rnd(), rnd(), rnd(), rnd(), rnd(), rnd(), rnd())
								end
							end
							else do
								do
									println "-113" , ", " , rnd(), ", " , rnd(), ", " , rnd(), ", " , rnd(), ", " , rnd(), ", " , rnd(), ", " , rnd(), ", " , rnd(), ", " , rnd(), ", " , rnd(), ", " , id , ", " , rnd(), ", " , rnd(), ", " , rnd(), ", " , rnd(), ", " , rnd(), ", "
									app!m3r17r0ar25r61r3r36r12bisbis(rnd(), rnd(), rnd(), rnd(), rnd(), rnd(), rnd(), rnd(), rnd(), rnd(), id, rnd(), rnd(), rnd(), rnd(), rnd())
								end
							end
						end
					end
				end
				else do
					if (rnd()< 10) do
						do
							do
								println "-127" , ", " , rnd(), ", " , rnd(), ", " , rnd(), ", " , rnd(), ", " , rnd(), ", " , id , ", " , rnd(), ", " , rnd(), ", " , rnd(), ", " , rnd(), ", " , rnd(), ", " , rnd(), ", "
								app!m3bisr48r23ar4(rnd(), rnd(), rnd(), rnd(), rnd(), id, rnd(), rnd(), rnd(), rnd(), rnd(), rnd())
							end
							if (rnd()< 253) do
								do
									println "-126" , ", " , rnd(), ", " , rnd(), ", " , rnd(), ", " , rnd(), ", " , rnd(), ", " , rnd(), ", " , rnd(), ", " , rnd(), ", " , rnd(), ", " , rnd(), ", " , rnd(), ", " , rnd(), ", " , rnd(), ", "
									app!m3bisr20r63r0r39r8(rnd(), rnd(), rnd(), rnd(), rnd(), rnd(), rnd(), rnd(), rnd(), rnd(), rnd(), rnd(), rnd())
								end
							end
							else do
								do
									println "-117" , ", " , rnd(), ", " , rnd(), ", " , rnd(), ", " , rnd(), ", " , rnd(), ", " , rnd(), ", " , rnd(), ", " , rnd(), ", " , rnd(), ", " , rnd(), ", " , rnd(), ", " , rnd(), ", " , rnd(), ", "
									app!m3bisr20r63r0r39r8bis(rnd(), rnd(), rnd(), rnd(), rnd(), rnd(), rnd(), rnd(), rnd(), rnd(), rnd(), rnd(), rnd())
								end
							end
						end
					end
					else do
						if (rnd()< 63) do
							do
								do
									println "-125" , ", " , rnd(), ", " , rnd(), ", " , rnd(), ", " , rnd(), ", " , rnd(), ", " , rnd(), ", " , id , ", " , rnd(), ", " , rnd(), ", " , rnd(), ", " , rnd(), ", " , rnd(), ", " , rnd(), ", " , rnd(), ", " , rnd(), ", "
									app!m3bisbisr4ar46r66r27r21r0(rnd(), rnd(), rnd(), rnd(), rnd(), rnd(), id, rnd(), rnd(), rnd(), rnd(), rnd(), rnd(), rnd(), rnd())
								end
								if (rnd()< 152) do
									do
										println "-124" , ", " , rnd(), ", " , rnd(), ", " , rnd(), ", " , rnd(), ", " , rnd(), ", " , rnd(), ", " , rnd(), ", " , rnd(), ", " , rnd(), ", " , rnd(), ", "
										app!m3bisbisr8r37(rnd(), rnd(), rnd(), rnd(), rnd(), rnd(), rnd(), rnd(), rnd(), rnd())
									end
								end
								else do
									if (rnd()< 37) do
										do
											println "-116" , ", " , rnd(), ", " , rnd(), ", " , rnd(), ", " , rnd(), ", " , rnd(), ", " , rnd(), ", " , rnd(), ", " , rnd(), ", " , rnd(), ", " , rnd(), ", "
											app!m3bisbisr8r37bis(rnd(), rnd(), rnd(), rnd(), rnd(), rnd(), rnd(), rnd(), rnd(), rnd())
										end
									end
									else do
										if (rnd()< 250) do
											do
												println "-112" , ", " , rnd(), ", " , rnd(), ", " , rnd(), ", " , rnd(), ", " , rnd(), ", " , rnd(), ", " , rnd(), ", " , rnd(), ", " , rnd(), ", " , rnd(), ", "
												app!m3bisbisr8r37bisbis(rnd(), rnd(), rnd(), rnd(), rnd(), rnd(), rnd(), rnd(), rnd(), rnd())
											end
										end
										else do
											if (rnd()< 138) do
												do
													println "-110" , ", " , rnd(), ", " , rnd(), ", " , rnd(), ", " , rnd(), ", " , rnd(), ", " , rnd(), ", " , rnd(), ", " , rnd(), ", " , rnd(), ", " , rnd(), ", "
													app!m3bisbisr8r37bisbisbis(rnd(), rnd(), rnd(), rnd(), rnd(), rnd(), rnd(), rnd(), rnd(), rnd())
												end
											end
											else do
												do
													println "-109" , ", " , rnd(), ", " , rnd(), ", " , rnd(), ", " , rnd(), ", " , rnd(), ", " , rnd(), ", " , rnd(), ", " , rnd(), ", " , rnd(), ", " , rnd(), ", "
													app!m3bisbisr8r37bisbisbisbis(rnd(), rnd(), rnd(), rnd(), rnd(), rnd(), rnd(), rnd(), rnd(), rnd())
												end
											end
										end
									end
								end
							end
						end
						else do
							if (rnd()< 117) do
								do
									do
										println "-123" , ", " , rnd(), ", " , rnd(), ", " , rnd(), ", " , rnd(), ", " , rnd(), ", " , rnd(), ", " , rnd(), ", " , rnd(), ", " , rnd(), ", " , rnd(), ", " , rnd(), ", " , rnd(), ", " , rnd(), ", " , rnd(), ", "
										app!m3bisbisbisr64r37r44r8r4r0(rnd(), rnd(), rnd(), rnd(), rnd(), rnd(), rnd(), rnd(), rnd(), rnd(), rnd(), rnd(), rnd(), rnd())
									end
									if (rnd()< 202) do
										do
											println "-122" , ", " , rnd(), ", " , rnd(), ", " , rnd(), ", " , rnd(), ", " , id , ", " , rnd(), ", " , rnd(), ", " , rnd(), ", " , rnd(), ", " , rnd(), ", " , rnd(), ", "
											app!m3bisbisbisar27r21(rnd(), rnd(), rnd(), rnd(), id, rnd(), rnd(), rnd(), rnd(), rnd(), rnd())
										end
									end
									else do
										do
											println "-115" , ", " , rnd(), ", " , rnd(), ", " , rnd(), ", " , rnd(), ", " , rnd(), ", " , rnd(), ", " , rnd(), ", " , rnd(), ", " , rnd(), ", " , rnd(), ", " , id , ", "
											app!m3bisbisbisar27r21bis(rnd(), rnd(), rnd(), rnd(), rnd(), rnd(), rnd(), rnd(), rnd(), rnd(), id)
										end
									end
								end
							end
							else do
								do
									do
										println "-121" , ", " , rnd(), ", " , rnd(), ", " , rnd(), ", " , rnd(), ", " , rnd(), ", " , rnd(), ", " , id , ", " , rnd(), ", " , rnd(), ", " , rnd(), ", " , rnd(), ", " , rnd(), ", " , rnd(), ", " , rnd(), ", " , rnd(), ", "
										app!m3bisbisbisbisr37r8r21r0r44ar4(rnd(), rnd(), rnd(), rnd(), rnd(), rnd(), id, rnd(), rnd(), rnd(), rnd(), rnd(), rnd(), rnd(), rnd())
									end
									if (rnd()< 120) do
										do
											println "-120" , ", " , rnd(), ", " , rnd(), ", " , rnd(), ", " , rnd(), ", " , rnd(), ", " , rnd(), ", " , rnd(), ", " , rnd(), ", " , rnd(), ", " , rnd(), ", "
											app!m3bisbisbisbisr27r65(rnd(), rnd(), rnd(), rnd(), rnd(), rnd(), rnd(), rnd(), rnd(), rnd())
										end
									end
									else do
										if (rnd()< 172) do
											do
												println "-114" , ", " , rnd(), ", " , rnd(), ", " , rnd(), ", " , rnd(), ", " , rnd(), ", " , rnd(), ", " , rnd(), ", " , rnd(), ", " , rnd(), ", " , rnd(), ", "
												app!m3bisbisbisbisr27r65bis(rnd(), rnd(), rnd(), rnd(), rnd(), rnd(), rnd(), rnd(), rnd(), rnd())
											end
										end
										else do
											do
												println "-111" , ", " , rnd(), ", " , rnd(), ", " , rnd(), ", " , rnd(), ", " , rnd(), ", " , rnd(), ", " , rnd(), ", " , rnd(), ", " , rnd(), ", " , rnd(), ", "
												app!m3bisbisbisbisr27r65bisbis(rnd(), rnd(), rnd(), rnd(), rnd(), rnd(), rnd(), rnd(), rnd(), rnd())
											end
										end
									end
								end
							end
						end
					end
				end
			end
			transition -> WaitForM1
		}
	}
}
thing Client includes Msgs {
	required port app {
		sends m1 sends m2
		sends m1bis sends m2bis sends m2bisbis sends m1bisbis sends m2bisbisbis sends m1bisbisbis sends m2bisbisbisbis sends m2bisbisbisbisbis sends m2bisbisbisbisbisbis receives m3r50
	receives m3r17r0ar25r61r3r36r12 receives m3bisr48r23ar4 receives m3bisr20r63r0r39r8 receives m3bisbisr4ar46r66r27r21r0 receives m3bisbisr8r37 receives m3bisbisbisr64r37r44r8r4r0 receives m3bisbisbisar27r21 receives m3bisbisbisbisr37r8r21r0r44ar4 receives m3bisbisbisbisr27r65 receives m3r17r0ar25r61r3r36r12bis receives m3bisr20r63r0r39r8bis receives m3bisbisr8r37bis receives m3bisbisbisar27r21bis receives m3bisbisbisbisr27r65bis receives m3r17r0ar25r61r3r36r12bisbis receives m3bisbisr8r37bisbis receives m3bisbisbisbisr27r65bisbis receives m3bisbisr8r37bisbisbis receives m3bisbisr8r37bisbisbisbis
	}
	internal port diversified {
		sends m3 sends m3bisr48r23ar4 sends m3bisr20r63r0r39r8 sends m3bis sends m3bisbisr4ar46r66r27r21r0 sends m3bisbisr8r37 sends m3bisbis sends m3bisbisbisr64r37r44r8r4r0 sends m3bisbisbisar27r21 sends m3bisbisbis sends m3bisbisbisbisr37r8r21r0r44ar4 sends m3bisbisbisbisr27r65 sends m3bisbisbisbis sends m3bisr20r63r0r39r8bis sends m3bisbisr8r37bis sends m3bisbisbisar27r21bis sends m3bisbisbisbisr27r65bis sends m3bisbisr8r37bisbis sends m3bisbisbisbisr27r65bisbis sends m3bisbisr8r37bisbisbis sends m3bisbisr8r37bisbisbisbis receives m3 receives m3bisr48r23ar4 receives m3bisr20r63r0r39r8 receives m3bis receives m3bisbisr4ar46r66r27r21r0 receives m3bisbisr8r37 receives m3bisbis receives m3bisbisbisr64r37r44r8r4r0 receives m3bisbisbisar27r21 receives m3bisbisbis receives m3bisbisbisbisr37r8r21r0r44ar4 receives m3bisbisbisbisr27r65 receives m3bisbisbisbis receives m3bisr20r63r0r39r8bis receives m3bisbisr8r37bis receives m3bisbisbisar27r21bis receives m3bisbisbisbisr27r65bis receives m3bisbisr8r37bisbis receives m3bisbisbisbisr27r65bisbis receives m3bisbisr8r37bisbisbis receives m3bisbisr8r37bisbisbisbis
	}
	property counter : Integer = 0
	property _a : Byte
	property _b : Byte
	property _c : Byte
	property _d : Byte
	property _e : Byte
	statechart init RUN {
		on entry do
			_a = rnd()
			_b = rnd()
		end
		state RUN {
			on entry do
				_c = rnd()
				_d = rnd()
				_e = rnd()
				println "#CLI: Come get some app!m1(" , _a , ", " , _b , ", " , _c , ", " , _d , ", " , _e , ")!"
				if (rnd()< 202) do
					do
						println "112" , ", " , rnd(), ", " , _a , ", " , rnd(), ", " , rnd(), ", " , rnd(), ", " , rnd(), ", " , rnd(), ", " , rnd(), ", " , rnd(), ", " , rnd(), ", " , rnd(), ", " , rnd(), ", " , _e , ", " , rnd(), ", " , rnd(), ", " , _b , ", " , _c , ", " , _d , ", " , rnd(), ", " , rnd(), ", " , rnd(), ", "
						app!m1(rnd(), _a, rnd(), rnd(), rnd(), rnd(), rnd(), rnd(), rnd(), rnd(), rnd(), rnd(), _e, rnd(), rnd(), _b, _c, _d, rnd(), rnd(), rnd())
					end
				end
				else do
					if (rnd()< 95) do
						do
							println "115" , ", " , _e , ", " , rnd(), ", " , rnd(), ", " , rnd(), ", " , rnd(), ", " , rnd(), ", " , rnd(), ", " , rnd(), ", " , rnd(), ", " , rnd(), ", " , rnd(), ", " , rnd(), ", " , _c , ", " , rnd(), ", " , _a , ", " , rnd(), ", " , rnd(), ", " , rnd(), ", " , rnd(), ", " , _b , ", " , _d , ", "
							app!m1bis(_e, rnd(), rnd(), rnd(), rnd(), rnd(), rnd(), rnd(), rnd(), rnd(), rnd(), rnd(), _c, rnd(), _a, rnd(), rnd(), rnd(), rnd(), _b, _d)
						end
					end
					else do
						if (rnd()< 115) do
							do
								println "114" , ", " , rnd(), ", " , _e , ", " , rnd(), ", " , _c , ", " , rnd(), ", " , rnd(), ", " , rnd(), ", " , _a , ", " , rnd(), ", " , rnd(), ", " , rnd(), ", " , rnd(), ", " , rnd(), ", " , rnd(), ", " , rnd(), ", " , _d , ", " , _b , ", " , rnd(), ", " , rnd(), ", " , rnd(), ", " , rnd(), ", "
								app!m1bisbis(rnd(), _e, rnd(), _c, rnd(), rnd(), rnd(), _a, rnd(), rnd(), rnd(), rnd(), rnd(), rnd(), rnd(), _d, _b, rnd(), rnd(), rnd(), rnd())
							end
						end
						else do
							do
								println "117" , ", " , rnd(), ", " , rnd(), ", " , rnd(), ", " , _c , ", " , rnd(), ", " , rnd(), ", " , rnd(), ", " , rnd(), ", " , rnd(), ", " , rnd(), ", " , rnd(), ", " , rnd(), ", " , rnd(), ", " , rnd(), ", " , rnd(), ", " , _b , ", " , _a , ", " , rnd(), ", " , _d , ", " , _e , ", " , rnd(), ", "
								app!m1bisbisbis(rnd(), rnd(), rnd(), _c, rnd(), rnd(), rnd(), rnd(), rnd(), rnd(), rnd(), rnd(), rnd(), rnd(), rnd(), _b, _a, rnd(), _d, _e, rnd())
							end
						end
					end
				end
				println "#CLI: Come get some app!m2(" , _a , ", " , _b , ", " , _c , ")!"
				if (rnd()< 28) do
					do
						println "113" , ", " , rnd(), ", " , rnd(), ", " , rnd(), ", " , rnd(), ", " , rnd(), ", " , rnd(), ", " , rnd(), ", " , rnd(), ", " , rnd(), ", " , rnd(), ", " , rnd(), ", " , _b , ", " , _c , ", " , rnd(), ", " , rnd(), ", " , rnd(), ", " , rnd(), ", " , rnd(), ", " , _a , ", "
						app!m2(rnd(), rnd(), rnd(), rnd(), rnd(), rnd(), rnd(), rnd(), rnd(), rnd(), rnd(), _b, _c, rnd(), rnd(), rnd(), rnd(), rnd(), _a)
					end
				end
				else do
					if (rnd()< 251) do
						do
							println "120" , ", " , rnd(), ", " , rnd(), ", " , rnd(), ", " , _b , ", " , rnd(), ", " , _c , ", " , rnd(), ", " , _a , ", " , rnd(), ", " , rnd(), ", " , rnd(), ", " , rnd(), ", " , rnd(), ", " , rnd(), ", " , rnd(), ", " , rnd(), ", " , rnd(), ", " , rnd(), ", " , rnd(), ", "
							app!m2bis(rnd(), rnd(), rnd(), _b, rnd(), _c, rnd(), _a, rnd(), rnd(), rnd(), rnd(), rnd(), rnd(), rnd(), rnd(), rnd(), rnd(), rnd())
						end
					end
					else do
						if (rnd()< 152) do
							do
								println "118" , ", " , rnd(), ", " , rnd(), ", " , rnd(), ", " , rnd(), ", " , _c , ", " , rnd(), ", " , rnd(), ", " , rnd(), ", " , _b , ", " , rnd(), ", " , rnd(), ", " , rnd(), ", " , rnd(), ", " , rnd(), ", " , rnd(), ", " , _a , ", " , rnd(), ", " , rnd(), ", " , rnd(), ", "
								app!m2bisbis(rnd(), rnd(), rnd(), rnd(), _c, rnd(), rnd(), rnd(), _b, rnd(), rnd(), rnd(), rnd(), rnd(), rnd(), _a, rnd(), rnd(), rnd())
							end
						end
						else do
							if (rnd()< 93) do
								do
									println "125" , ", " , rnd(), ", " , rnd(), ", " , rnd(), ", " , _b , ", " , rnd(), ", " , rnd(), ", " , rnd(), ", " , rnd(), ", " , rnd(), ", " , rnd(), ", " , rnd(), ", " , rnd(), ", " , rnd(), ", " , _a , ", " , rnd(), ", " , rnd(), ", " , _c , ", " , rnd(), ", " , rnd(), ", "
									app!m2bisbisbis(rnd(), rnd(), rnd(), _b, rnd(), rnd(), rnd(), rnd(), rnd(), rnd(), rnd(), rnd(), rnd(), _a, rnd(), rnd(), _c, rnd(), rnd())
								end
							end
							else do
								if (rnd()< 203) do
									do
										println "116" , ", " , rnd(), ", " , rnd(), ", " , rnd(), ", " , rnd(), ", " , rnd(), ", " , rnd(), ", " , _c , ", " , rnd(), ", " , rnd(), ", " , rnd(), ", " , _a , ", " , rnd(), ", " , rnd(), ", " , rnd(), ", " , rnd(), ", " , rnd(), ", " , _b , ", " , rnd(), ", " , rnd(), ", "
										app!m2bisbisbisbis(rnd(), rnd(), rnd(), rnd(), rnd(), rnd(), _c, rnd(), rnd(), rnd(), _a, rnd(), rnd(), rnd(), rnd(), rnd(), _b, rnd(), rnd())
									end
								end
								else do
									if (rnd()< 32) do
										do
											println "126" , ", " , rnd(), ", " , rnd(), ", " , rnd(), ", " , rnd(), ", " , rnd(), ", " , rnd(), ", " , rnd(), ", " , _c , ", " , rnd(), ", " , rnd(), ", " , rnd(), ", " , rnd(), ", " , rnd(), ", " , rnd(), ", " , _a , ", " , _b , ", " , rnd(), ", " , rnd(), ", " , rnd(), ", "
											app!m2bisbisbisbisbis(rnd(), rnd(), rnd(), rnd(), rnd(), rnd(), rnd(), _c, rnd(), rnd(), rnd(), rnd(), rnd(), rnd(), _a, _b, rnd(), rnd(), rnd())
										end
									end
									else do
										do
											println "-119" , ", " , rnd(), ", " , rnd(), ", " , rnd(), ", " , rnd(), ", " , rnd(), ", " , rnd(), ", " , _c , ", " , rnd(), ", " , rnd(), ", " , rnd(), ", " , rnd(), ", " , rnd(), ", " , rnd(), ", " , _b , ", " , rnd(), ", " , rnd(), ", " , _a , ", " , rnd(), ", " , rnd(), ", "
											app!m2bisbisbisbisbisbis(rnd(), rnd(), rnd(), rnd(), rnd(), rnd(), _c, rnd(), rnd(), rnd(), rnd(), rnd(), rnd(), _b, rnd(), rnd(), _a, rnd(), rnd())
										end
									end
								end
							end
						end
					end
				end
				counter ++
			end
			transition -> STOP
			guard counter == 100
			transition -> RUN
			event e : diversified?m3
			guard e.a == _a
			action do
				println "#CLI: Ooh, I needed that app?m3(" , e.a , ")!"
				println "#CLI: We meet again, Doctor Jones!"
			end
			transition -> ERROR
			event e : diversified?m3
			guard e.a != _a
			action do
				println "#CLI: Ooh, I needed that app?m3(" , e.a , ")!"
				println "#CLI: Damn, you re ugly."
			end
			transition -> RUN
			event e : diversified?m3bis
			guard e.a == _a
			action do
				println "#CLI: Ooh, I needed that app?m3(" , e.a , ")!"
				println "#CLI: We meet again, Doctor Jones!"
			end
			transition -> ERROR
			event e : diversified?m3bis
			guard e.a != _a
			action do
				println "#CLI: Ooh, I needed that app?m3(" , e.a , ")!"
				println "#CLI: Damn, you re ugly."
			end
			transition -> RUN
			event e : diversified?m3bisbis
			guard e.a == _a
			action do
				println "#CLI: Ooh, I needed that app?m3(" , e.a , ")!"
				println "#CLI: We meet again, Doctor Jones!"
			end
			transition -> ERROR
			event e : diversified?m3bisbis
			guard e.a != _a
			action do
				println "#CLI: Ooh, I needed that app?m3(" , e.a , ")!"
				println "#CLI: Damn, you re ugly."
			end
			transition -> RUN
			event e : diversified?m3bisbisbis
			guard e.a == _a
			action do
				println "#CLI: Ooh, I needed that app?m3(" , e.a , ")!"
				println "#CLI: We meet again, Doctor Jones!"
			end
			transition -> ERROR
			event e : diversified?m3bisbisbis
			guard e.a != _a
			action do
				println "#CLI: Ooh, I needed that app?m3(" , e.a , ")!"
				println "#CLI: Damn, you re ugly."
			end
			transition -> RUN
			event e : diversified?m3bisbisbisbis
			guard e.a == _a
			action do
				println "#CLI: Ooh, I needed that app?m3(" , e.a , ")!"
				println "#CLI: We meet again, Doctor Jones!"
			end
			transition -> ERROR
			event e : diversified?m3bisbisbisbis
			guard e.a != _a
			action do
				println "#CLI: Ooh, I needed that app?m3(" , e.a , ")!"
				println "#CLI: Damn, you re ugly."
			end
		}
		final state STOP {
			on entry println "#CLI: What are you waitin for? Christmas?"
		}
		final state ERROR {
			on entry println "#CLI: Heh, heh, heh... what a mess!"
		}
		region generate_m3_from_m3r50_and_m3r17r0ar25r61r3r36r12 init INIT {
			composite state INIT init S1 {
				property r50 : Byte
				property r17 : Byte
				property r0 : Byte
				property a : Byte
				property r25 : Byte
				property r61 : Byte
				property r3 : Byte
				property r36 : Byte
				property r12 : Byte
				state S1 @diversify "not" {
					transition -> S2
					event ev : app?m3r50
					action do
						r50 = ev.r50
					end
					transition -> S3
					event ev : app?m3r17r0ar25r61r3r36r12
					action do
						r17 = ev.r17
						r0 = ev.r0
						a = ev.a
						r25 = ev.r25
						r61 = ev.r61
						r3 = ev.r3
						r36 = ev.r36
						r12 = ev.r12
					end
					transition -> S3
					event ev : app?m3r17r0ar25r61r3r36r12bis
					action do
						r17 = ev.r17
						r0 = ev.r0
						a = ev.a
						r25 = ev.r25
						r61 = ev.r61
						r3 = ev.r3
						r36 = ev.r36
						r12 = ev.r12
					end
					transition -> S3
					event ev : app?m3r17r0ar25r61r3r36r12bisbis
					action do
						r17 = ev.r17
						r0 = ev.r0
						a = ev.a
						r25 = ev.r25
						r61 = ev.r61
						r3 = ev.r3
						r36 = ev.r36
						r12 = ev.r12
					end
				}
				state S2 @diversify "not" {
					transition -> S4
					event ev : app?m3r17r0ar25r61r3r36r12
					action do
						r17 = ev.r17
						r0 = ev.r0
						a = ev.a
						r25 = ev.r25
						r61 = ev.r61
						r3 = ev.r3
						r36 = ev.r36
						r12 = ev.r12
					end
					transition -> S4
					event ev : app?m3r17r0ar25r61r3r36r12bis
					action do
						r17 = ev.r17
						r0 = ev.r0
						a = ev.a
						r25 = ev.r25
						r61 = ev.r61
						r3 = ev.r3
						r36 = ev.r36
						r12 = ev.r12
					end
					transition -> S4
					event ev : app?m3r17r0ar25r61r3r36r12bisbis
					action do
						r17 = ev.r17
						r0 = ev.r0
						a = ev.a
						r25 = ev.r25
						r61 = ev.r61
						r3 = ev.r3
						r36 = ev.r36
						r12 = ev.r12
					end
				}
				state S3 @diversify "not" {
					transition -> S4
					event ev : app?m3r50
					action do
						r50 = ev.r50
					end
				}
				state S4 @diversify "not" {
					on entry do
						diversified!m3(r3, rnd(), rnd(), r61, r36, r0, a, r12, r50, r25, rnd(), r17, rnd(), rnd(), rnd(), rnd(), rnd())
					end
					transition -> S1
				}
			}
		}
		region generate_m3bis_from_m3bisr48r23ar4_and_m3bisr20r63r0r39r8 init INIT {
			composite state INIT init S1 {
				property r48 : Byte
				property r23 : Byte
				property a : Byte
				property r4 : Byte
				property r20 : Byte
				property r63 : Byte
				property r0 : Byte
				property r39 : Byte
				property r8 : Byte
				state S1 @diversify "not" {
					transition -> S2
					event ev : app?m3bisr48r23ar4
					action do
						r48 = ev.r48
						r23 = ev.r23
						a = ev.a
						r4 = ev.r4
					end
					transition -> S3
					event ev : app?m3bisr20r63r0r39r8
					action do
						r20 = ev.r20
						r63 = ev.r63
						r0 = ev.r0
						r39 = ev.r39
						r8 = ev.r8
					end
					transition -> S3
					event ev : app?m3bisr20r63r0r39r8bis
					action do
						r20 = ev.r20
						r63 = ev.r63
						r0 = ev.r0
						r39 = ev.r39
						r8 = ev.r8
					end
				}
				state S2 @diversify "not" {
					transition -> S4
					event ev : app?m3bisr20r63r0r39r8
					action do
						r20 = ev.r20
						r63 = ev.r63
						r0 = ev.r0
						r39 = ev.r39
						r8 = ev.r8
					end
					transition -> S4
					event ev : app?m3bisr20r63r0r39r8bis
					action do
						r20 = ev.r20
						r63 = ev.r63
						r0 = ev.r0
						r39 = ev.r39
						r8 = ev.r8
					end
				}
				state S3 @diversify "not" {
					transition -> S4
					event ev : app?m3bisr48r23ar4
					action do
						r48 = ev.r48
						r23 = ev.r23
						a = ev.a
						r4 = ev.r4
					end
				}
				state S4 @diversify "not" {
					on entry do
						diversified!m3bis(r8, rnd(), a, r39, rnd(), r48, rnd(), rnd(), rnd(), r4, r63, rnd(), r0, rnd(), r23, rnd(), r20)
					end
					transition -> S1
				}
			}
		}
		region generate_m3bisbis_from_m3bisbisr4ar46r66r27r21r0_and_m3bisbisr8r37 init INIT {
			composite state INIT init S1 {
				property r4 : Byte
				property a : Byte
				property r46 : Byte
				property r66 : Byte
				property r27 : Byte
				property r21 : Byte
				property r0 : Byte
				property r8 : Byte
				property r37 : Byte
				state S1 @diversify "not" {
					transition -> S2
					event ev : app?m3bisbisr4ar46r66r27r21r0
					action do
						r4 = ev.r4
						a = ev.a
						r46 = ev.r46
						r66 = ev.r66
						r27 = ev.r27
						r21 = ev.r21
						r0 = ev.r0
					end
					transition -> S3
					event ev : app?m3bisbisr8r37
					action do
						r8 = ev.r8
						r37 = ev.r37
					end
					transition -> S3
					event ev : app?m3bisbisr8r37bis
					action do
						r8 = ev.r8
						r37 = ev.r37
					end
					transition -> S3
					event ev : app?m3bisbisr8r37bisbis
					action do
						r8 = ev.r8
						r37 = ev.r37
					end
					transition -> S3
					event ev : app?m3bisbisr8r37bisbisbis
					action do
						r8 = ev.r8
						r37 = ev.r37
					end
					transition -> S3
					event ev : app?m3bisbisr8r37bisbisbisbis
					action do
						r8 = ev.r8
						r37 = ev.r37
					end
				}
				state S2 @diversify "not" {
					transition -> S4
					event ev : app?m3bisbisr8r37
					action do
						r8 = ev.r8
						r37 = ev.r37
					end
					transition -> S4
					event ev : app?m3bisbisr8r37bis
					action do
						r8 = ev.r8
						r37 = ev.r37
					end
					transition -> S4
					event ev : app?m3bisbisr8r37bisbis
					action do
						r8 = ev.r8
						r37 = ev.r37
					end
					transition -> S4
					event ev : app?m3bisbisr8r37bisbisbis
					action do
						r8 = ev.r8
						r37 = ev.r37
					end
					transition -> S4
					event ev : app?m3bisbisr8r37bisbisbisbis
					action do
						r8 = ev.r8
						r37 = ev.r37
					end
				}
				state S3 @diversify "not" {
					transition -> S4
					event ev : app?m3bisbisr4ar46r66r27r21r0
					action do
						r4 = ev.r4
						a = ev.a
						r46 = ev.r46
						r66 = ev.r66
						r27 = ev.r27
						r21 = ev.r21
						r0 = ev.r0
					end
				}
				state S4 @diversify "not" {
					on entry do
						diversified!m3bisbis(r0, r46, r37, rnd(), rnd(), r21, r27, rnd(), rnd(), rnd(), a, r4, rnd(), r66, rnd(), r8, rnd())
					end
					transition -> S1
				}
			}
		}
		region generate_m3bisbisbis_from_m3bisbisbisr64r37r44r8r4r0_and_m3bisbisbisar27r21 init INIT {
			composite state INIT init S1 {
				property r64 : Byte
				property r37 : Byte
				property r44 : Byte
				property r8 : Byte
				property r4 : Byte
				property r0 : Byte
				property a : Byte
				property r27 : Byte
				property r21 : Byte
				state S1 @diversify "not" {
					transition -> S2
					event ev : app?m3bisbisbisr64r37r44r8r4r0
					action do
						r64 = ev.r64
						r37 = ev.r37
						r44 = ev.r44
						r8 = ev.r8
						r4 = ev.r4
						r0 = ev.r0
					end
					transition -> S3
					event ev : app?m3bisbisbisar27r21
					action do
						a = ev.a
						r27 = ev.r27
						r21 = ev.r21
					end
					transition -> S3
					event ev : app?m3bisbisbisar27r21bis
					action do
						a = ev.a
						r27 = ev.r27
						r21 = ev.r21
					end
				}
				state S2 @diversify "not" {
					transition -> S4
					event ev : app?m3bisbisbisar27r21
					action do
						a = ev.a
						r27 = ev.r27
						r21 = ev.r21
					end
					transition -> S4
					event ev : app?m3bisbisbisar27r21bis
					action do
						a = ev.a
						r27 = ev.r27
						r21 = ev.r21
					end
				}
				state S3 @diversify "not" {
					transition -> S4
					event ev : app?m3bisbisbisr64r37r44r8r4r0
					action do
						r64 = ev.r64
						r37 = ev.r37
						r44 = ev.r44
						r8 = ev.r8
						r4 = ev.r4
						r0 = ev.r0
					end
				}
				state S4 @diversify "not" {
					on entry do
						diversified!m3bisbisbis(r4, rnd(), rnd(), r37, rnd(), r64, rnd(), rnd(), rnd(), r27, r0, rnd(), r21, a, rnd(), r8, r44)
					end
					transition -> S1
				}
			}
		}
		region generate_m3bisbisbisbis_from_m3bisbisbisbisr37r8r21r0r44ar4_and_m3bisbisbisbisr27r65 init INIT {
			composite state INIT init S1 {
				property r37 : Byte
				property r8 : Byte
				property r21 : Byte
				property r0 : Byte
				property r44 : Byte
				property a : Byte
				property r4 : Byte
				property r27 : Byte
				property r65 : Byte
				state S1 @diversify "not" {
					transition -> S2
					event ev : app?m3bisbisbisbisr37r8r21r0r44ar4
					action do
						r37 = ev.r37
						r8 = ev.r8
						r21 = ev.r21
						r0 = ev.r0
						r44 = ev.r44
						a = ev.a
						r4 = ev.r4
					end
					transition -> S3
					event ev : app?m3bisbisbisbisr27r65
					action do
						r27 = ev.r27
						r65 = ev.r65
					end
					transition -> S3
					event ev : app?m3bisbisbisbisr27r65bis
					action do
						r27 = ev.r27
						r65 = ev.r65
					end
					transition -> S3
					event ev : app?m3bisbisbisbisr27r65bisbis
					action do
						r27 = ev.r27
						r65 = ev.r65
					end
				}
				state S2 @diversify "not" {
					transition -> S4
					event ev : app?m3bisbisbisbisr27r65
					action do
						r27 = ev.r27
						r65 = ev.r65
					end
					transition -> S4
					event ev : app?m3bisbisbisbisr27r65bis
					action do
						r27 = ev.r27
						r65 = ev.r65
					end
					transition -> S4
					event ev : app?m3bisbisbisbisr27r65bisbis
					action do
						r27 = ev.r27
						r65 = ev.r65
					end
				}
				state S3 @diversify "not" {
					transition -> S4
					event ev : app?m3bisbisbisbisr37r8r21r0r44ar4
					action do
						r37 = ev.r37
						r8 = ev.r8
						r21 = ev.r21
						r0 = ev.r0
						r44 = ev.r44
						a = ev.a
						r4 = ev.r4
					end
				}
				state S4 @diversify "not" {
					on entry do
						diversified!m3bisbisbisbis(r27, rnd(), r44, r0, r4, rnd(), a, r65, r21, rnd(), r8, rnd(), rnd(), r37, rnd(), rnd(), rnd())
					end
					transition -> S1
				}
			}
		}
	}
}
protocol Default ;

configuration test {
	instance app : App
	instance client1 : Client
	connector client1.app => app . app
}
